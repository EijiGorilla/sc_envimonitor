{"version":3,"file":"static/js/7472.b1953916.chunk.js","mappings":";yKAAgBA,EAAmBC,EAAeC,GAChD,OAAQD,EAAQC,GAASA,CAC3B,4FCFO,MAAMC,EACL,OADKA,EAEK,kBAGLC,EAAQ,CACnBC,QAAS,UACTC,QAAS,WAGEC,EACL,WCeFC,EAA0B,CAAC,UAAW,YAAa,MAAO,QAYnDC,GAAUC,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,sJAkHrB,KAAAC,eAA6C,GAE7C,KAAAC,KAAO,uBAAHC,QAA0BD,EAAAA,EAAAA,MAE9B,KAAAE,OAAS,GAAHD,OAAME,KAAKH,KAAI,SAErB,KAAAI,aAAe,GAAHH,OAAME,KAAKH,KAAI,gBA+B3B,KAAAK,oBAAsB,KACpB,MAAM,aAAED,EAAY,OAAEF,EAAM,KAAEI,EAAI,MAAEC,GAAUJ,KACxCK,EAAeL,KAAKM,qBAAuBN,KAAKO,oBAElDP,KAAKK,eAAiBA,IAI1BL,KAAKQ,yBAELR,KAAKK,aAAeA,EAEpBL,KAAKS,6BAEAJ,IAILA,EAAaK,OAASP,EACtBE,EAAaM,aAAa,gBAAiBZ,GAC3CM,EAAaM,aAAa,iBAAiBC,EAAAA,EAAAA,GAAcT,IACzDE,EAAaM,aAAa,gBAAiB,QAEtCN,EAAaQ,KAChBR,EAAaQ,GAAKZ,GAGfI,EAAaD,QAChBC,EAAaD,MAAQA,GAGlBC,EAAaS,OAChBT,EAAaS,KAAOV,GAGtBC,EAAaU,iBAAiB,QAASf,KAAKgB,iBAC5CX,EAAaU,iBAAiB,UAAWf,KAAKiB,oBAAkB,EAGlE,KAAAT,uBAAyB,KACvB,MAAM,aAAEH,GAAiBL,KAEpBK,IAILA,EAAaa,oBAAoB,QAASlB,KAAKgB,iBAC/CX,EAAaa,oBAAoB,UAAWlB,KAAKiB,mBAAkB,EAGrE,KAAAE,gBAAmBC,IACjB,MAAMC,EAAWD,EAAME,OACpBC,iBAAiB,CAChBC,SAAS,IAEVC,QAAQC,GAAyC,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAIC,QAAQ,oBAE9D3B,KAAKM,oBAAsBe,EAAQ,GACnCrB,KAAKE,qBAAqB,EAG5B,KAAA0B,uBAA0BF,IACxB1B,KAAKO,oBAAsBmB,EAC3B1B,KAAKE,qBAAqB,EAqF5B,KAAA2B,yBAA2B,KACzB7B,KAAKG,MAAO,EACZH,KAAK8B,UAAU,EAGT,KAAAd,gBAAkB,KACxBhB,KAAK+B,YAAY,EAGnB,KAAAC,cAAiBZ,IACf,MAAMa,EAAYb,EAAME,OACrBC,iBAAiB,CAChBC,SAAS,IAEVC,QAAQC,GAA0C,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAIC,QAAQ,qBAE/D3B,KAAKkC,UAAYD,EAAS,GAC1BjC,KAAKS,4BAA4B,EAGnC,KAAAA,2BAA6B,KAC3B,MAAM,UAAEyB,EAAS,SAAEC,EAAQ,aAAE9B,EAAY,KAAEF,GAASH,KAEhDkC,IACFA,EAAUE,iBAAoBD,GAAahC,EAAsB,KAAfE,IAItD,KAAAgC,aAAe,CAACC,EAAkCrD,KAChD,MAAM,KAAEY,EAAI,oBAAE0C,GAAwBvC,KAChCa,EAAK,GAAHf,OAAMD,EAAI,YAAAC,OAAWb,GAE7BqD,EAAOE,UAAY,EACnBF,EAAO3B,aAAa,OAAQ,YAEvB2B,EAAOzB,KACVyB,EAAOzB,GAAKA,GAIdyB,EAAOG,gBD3We,cC2WaxD,IAAUsD,EAAoB,EAGnE,KAAAG,cAAiBrB,IACR,OAAPA,QAAO,IAAPA,GAAAA,EAASsB,QAAQ3C,KAAKqC,aAAa,EAGrC,KAAAO,wBAA2BxB,IACzB,MAAMC,EAAWD,EAAME,OACpBC,iBAAiB,CAChBC,SAAS,IAEVqB,QAAmC,CAACC,EAAeC,IAClC,OAAZA,QAAY,IAAZA,GAAAA,EAAcpB,QAAQ,mBACxBmB,EAAcE,KAAKD,GACZD,GAGO,OAAZC,QAAY,IAAZA,GAAAA,EAAcpB,QAAQ,wBACjBmB,EAAchD,OAAOmD,MAAMC,KAAKH,EAAaI,iBAAiB,oBAGhEL,GACN,IAEL9C,KAAKJ,eAAiByB,EAAQI,QAAQa,IAAYA,EAAOc,WAAad,EAAOe,QAAO,EAOtF,KAAApC,kBAAqBG,IACnB,MAAM,IAAEkC,GAAQlC,GACV,eAAExB,EAAc,oBAAE2C,EAAmB,KAAEpC,GAASH,KAEtD,GAAKJ,EAAe2D,OAApB,CAIA,IAAIC,EAAAA,EAAAA,GAAgBF,GAAM,CAGxB,GAFAlC,EAAMqC,kBAEDtD,EAEH,YADAH,KAAK+B,aAIP,MAAMO,EAAS1C,EAAe2C,GAC9BD,EAASA,EAAOoB,QAAU1D,KAAK+B,YAAW,GAG5C,GAAY,QAARuB,EAKJ,MAAY,WAARA,GACFtD,KAAK+B,YAAW,QAChBX,EAAMqC,uBAIRzD,KAAK2D,uBAAuBvC,EAAOkC,EAAK1D,GAVtCI,KAAKG,MAAO,EAUyC,EAGzD,KAAAwD,uBAAyB,CACvBvC,EACAkC,EACAjC,KAEA,IAAKrB,KAAK4D,WAAWN,EAAK9D,GACxB,OAKF,GAFA4B,EAAMqC,kBAEDzD,KAAKG,KAWR,OAVAH,KAAK+B,aAEO,SAARuB,GAA0B,cAARA,IACpBtD,KAAKuC,oBAAsB,QAGjB,QAARe,GAAyB,YAARA,IACnBtD,KAAKuC,oBAAsBlB,EAAQkC,OAAS,IAMpC,SAARD,IACFtD,KAAKuC,oBAAsB,GAGjB,QAARe,IACFtD,KAAKuC,oBAAsBlB,EAAQkC,OAAS,GAG9C,MAAMM,EAAe7D,KAAKuC,oBAEd,YAARe,IACFtD,KAAKuC,oBAAsBvD,EAAmB8E,KAAKC,IAAIF,EAAe,GAAI,GAAIxC,EAAQkC,SAG5E,cAARD,IACFtD,KAAKuC,oBAAsBvD,EAAmB6E,EAAe,EAAGxC,EAAQkC,UAI5E,KAAAS,cAAgB,KACdhE,KAAK8B,WACL9B,KAAK0B,GAAGR,oBAAoB,qBAAsBlB,KAAKgE,cAAc,EAGvE,KAAAjC,WAAa,WAAmB,IAAlBkC,EAAKC,UAAAX,OAAA,QAAAY,IAAAD,UAAA,GAAAA,UAAA,IAAIE,EAAKjE,KAC1BiE,EAAK1C,GAAGX,iBAAiB,qBAAsBqD,EAAKJ,eACpDI,EAAKjE,KAAO8D,GAGN,KAAAI,kBAAoB,KAC1BrE,KAAKG,MAAO,CAAI,EAGV,KAAAmE,mBAAqB,KAC3BtE,KAAKG,MAAO,CAAK,kBAlbiE,uBAKhD,0DAqBW,0BAoBmB,0BAKX,4EA2CvB,EArHhCoE,iBAAAA,GACEvE,KAAKE,sBAGPsE,iBAAAA,IACEC,EAAAA,EAAAA,GAAuBzE,MAGzB0E,gBAAAA,IACEC,EAAAA,EAAAA,GAAmB3E,MAGrB4E,oBAAAA,GACE5E,KAAKQ,yBAkBPqE,eAAAA,GACE7E,KAAKG,MAAO,EACZH,KAAKS,6BAmBPqE,WAAAA,CAAY3E,GACVH,KAAKuC,oBAAsBvC,KAAKG,KAAO,GAAK,EACxCH,KAAKK,eACPL,KAAKK,aAAaK,OAASP,GAE7BH,KAAK+E,sBAAsBC,OAE3BhF,KAAKS,6BA6DPwE,0BAAAA,GACEjF,KAAK0C,cAAc1C,KAAKJ,gBAW1B,cAAMkC,GAGJ,aAFMoD,EAAAA,EAAAA,GAAmBlF,OAElBmF,EAAAA,EAAAA,GAAanF,KAAKK,cA2E3B+E,gBAAAA,GACE,MAAM,WAAEC,EAAU,MAAEjF,EAAK,MAAEkF,EAAK,SAAEnD,GAAanC,KAgB/C,OAbEuF,EAAAA,EAAAA,GAAA,QAAMC,KAAMpG,EAAME,QAASmG,aAAczF,KAAKmB,kBAC5CoE,EAAAA,EAAAA,GAAA,kBACEF,WAAYA,EACZK,MAAOvG,EACPwG,KAAMpG,EACNqG,IAAK5F,KAAK4B,uBACV0D,MAAOA,EACPxE,KAAMV,EACNyF,YAAa1D,KAQrB2D,eAAAA,GACE,MAAM,eACJlG,EAAc,oBACd2C,EAAmB,KACnBpC,EAAI,OACJJ,EAAM,aACNM,EAAY,MACZD,EAAK,UACL2F,EAAS,mBACTC,EAAkB,eAClBC,GACEjG,KAEEkG,EAAetG,EAAe2C,GAC9B4D,GAAiC,OAAZD,QAAY,IAAZA,OAAY,EAAZA,EAAcrF,KAAM,KAE/C,OACE0E,EAAAA,EAAAA,GAAA,mBACEa,WAAW,EACXH,eAAgBA,EAChBI,mBAAmB,EACnBjG,MAAOA,EACPkG,eAAgB,EAChBC,sBAAuBvG,KAAKsE,mBAC5BkC,qBAAsBxG,KAAKqE,kBAC3BlE,KAAMA,EACN6F,mBAAoBA,EACpBD,UAAWA,EACXU,iBAAiB,EACjBrE,iBAAkB/B,IAElBkF,EAAAA,EAAAA,GAAA,+BACyBY,EAAkB,kBACZ,OAAZ9F,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,GAC/B6E,MAAOvG,EACP0B,GAAId,EACJ2G,QAAS1G,KAAK6B,yBACd8E,KAAK,OACLnE,UAAW,IAEX+C,EAAAA,EAAAA,GAAA,QAAME,aAAczF,KAAK4C,4BAMjCgE,MAAAA,GACE,OACErB,EAAAA,EAAAA,GAACsB,EAAAA,GAAQ,CAAAvD,IAAA,4CACNtD,KAAKoF,mBACLpF,KAAK8F,mBACNP,EAAAA,EAAAA,GAAA,QAAAjC,IAAA,2CAAMkC,KAAMpG,EAAMC,QAASoG,aAAczF,KAAKgC,iBA+EpD4B,UAAAA,CAAWN,EAAawD,GACtB,QAASA,EAAcC,MAAMC,GAAMA,IAAM1D,qLCtZvB,guDCAf,MAAMnE,EACS,uBADTA,EAGA,YAHAA,EAII,iBAJJA,EAKC,cALDA,EAMH,SANGA,EAOM,mBAPNA,EAQe,+BARfA,EASF,UATEA,EAWE,cAXFA,EAYI,iBAZJA,EAaI,iBAbJA,EAcO,sBAdPA,EAeS,wBAfTA,EAgBK,kBAhBLA,EAiBG,gBAjBHA,EAkBH,SAlBGA,EAmBI,iBAnBJA,EAoBI,iBApBJA,EAqBE,eArBFA,EAsBA,aAGA8H,EACJ,QADIA,EAED,WAGC1H,EACJ,IADIA,EAEL,WAFKA,EAKH,eALGA,EAMD,aAGCH,EAAQ,CACnB8H,UAAW,aACXC,OAAQ,SACRC,cAAe,iBACfC,WAAY,cACZC,mBAAoB,uBACpBC,iBAAkB,qBAClBC,kBAAmB,sBACnBC,cAAe,iBACfC,IAAK,MACLC,OAAQ,SACRC,UAAW,aACXC,YAAa,eACbC,cAAe,kBCsBJC,GAAKrI,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,6PAyJhB,KAAAqI,gBAAiBC,EAAAA,EAAAA,GAAe,UAAU,IAAMjI,KAAKkI,kBAkErD,KAAAA,cAAgB,KACd,MAAM,cAAEC,GAAkBnI,KAE1B,IACGmI,GACqC,kBAA/BA,EAAcC,cACiB,kBAA/BD,EAAcE,aAErB,OAG0BF,EAAcC,aAAeD,EAAcE,aAIrEF,EAAcxH,aAAa,WAAY,KAEvCwH,EAAcG,gBAAgB,aAIlC,KAAAC,gBAAmBC,IACjBxI,KAAKyI,YAAcD,CAAI,EAGzB,KAAAE,oBAAuBtH,IACjBpB,KAAK2I,UAA0B,WAAdvH,EAAMkC,MAAqBlC,EAAMwH,mBACpD5I,KAAK6I,kBACLzH,EAAMqC,mBAIF,KAAAoF,gBAAkB,KACxB7I,KAAK8I,QAAS,EACd9I,KAAK+I,kBAAkB/D,MAAM,EAG/B,KAAA7E,KAAO,KACLH,KAAKgJ,UAAW,CAAK,EAGvB,KAAAC,MAAQC,UAAA,IAAAC,EACN,MAAMC,EAA8B,QAAnBD,EAAGnJ,KAAKoJ,mBAAW,IAAAD,EAAAA,EAAK,IAAME,QAAQC,UAEvD,UACQF,IACN,MAAOG,GAKP,YAHAC,uBAAsB,KACpBxJ,KAAK8I,QAAS,CAAK,IAKvB9I,KAAKgJ,UAAW,CAAI,EAGtB,KAAAS,SAAW,KACTzJ,KAAK0J,WAAa1J,KAAK0J,UACvB1J,KAAK2J,mBAAmB3E,MAAM,EAGhC,KAAA4E,mBAAqB,KACnB5J,KAAK6J,mBAAmB7E,MAAM,EAGhC,KAAA8E,mCAAsC1I,IACpCpB,KAAK+J,iBAAkBC,EAAAA,EAAAA,GAA6B5I,EAAM,EAG5D,KAAA6I,iCAAoC7I,IAClCpB,KAAKkK,eAAgBF,EAAAA,EAAAA,GAA6B5I,EAAM,EAG1D,KAAA+I,kCAAqC/I,IACnCpB,KAAKoK,cAAeJ,EAAAA,EAAAA,GAA6B5I,EAAM,EAGzD,KAAAiJ,0BAA6BjJ,IAC3B,MAAMkJ,GAAaC,EAAAA,EAAAA,GAA8BnJ,GAAOK,QACrDC,GAA4C,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAIC,QAAQ,wBAGzD2I,EAAW3H,SAASuE,GAAeA,EAAUsD,OAAS,eAEtDxK,KAAKyK,eAAiBH,EAAW/G,MAAM,EAGzC,KAAAmH,8BAAiCtJ,IAC/BpB,KAAK2K,kBAAmBX,EAAAA,EAAAA,GAA6B5I,EAAM,EAG7D,KAAAwJ,oBAAuBxJ,IACrBpB,KAAK6K,QAASb,EAAAA,EAAAA,GAA6B5I,EAAM,EAGnD,KAAA0J,8BAAiC1J,IAC/BpB,KAAK+K,kBAAmBf,EAAAA,EAAAA,GAA6B5I,EAAM,EAG7D,KAAA4J,0BAA6B5J,IAC3BpB,KAAKiL,qBAAsBjB,EAAAA,EAAAA,GAA6B5I,EAAM,EAGhE,KAAA8J,4BAA+B9J,IAC7BpB,KAAKmL,uBAAwBnB,EAAAA,EAAAA,GAA6B5I,EAAM,EAGlE,KAAAgK,uBAA0BhK,IACxBpB,KAAKqL,kBAAmBrB,EAAAA,EAAAA,GAA6B5I,EAAM,EAGrD,KAAAkK,+BAAkClK,IACxCpB,KAAKuL,kBAAmBvB,EAAAA,EAAAA,GAA6B5I,EAAM,EAGrD,KAAAoK,4BAA+BpK,IACrCpB,KAAKyL,eAAgBzB,EAAAA,EAAAA,GAA6B5I,EAAM,EA2P1D,KAAAsK,iBAAoBhK,IAAe,IAAAiK,EAIzBC,GAHR5L,KAAKmI,cAAgBzG,EACF,QAAnBiK,EAAA3L,KAAKgI,sBAAc,IAAA2D,GAAnBA,EAAqBE,aAEjBnK,KACiB,QAAnBkK,EAAA5L,KAAKgI,sBAAc,IAAA4D,GAAnBA,EAAqBE,QAAQpK,GAC7B1B,KAAKkI,kBA0CT,KAAA6D,uBAA0B3K,IAAY,IAAA4K,EACA,QAApCA,GAAAzB,EAAAA,EAAAA,GAA8BnJ,UAAM,IAAA4K,GAApCA,EAAsCC,KAAKvK,IACrB,kBAAhBA,EAAGwK,WACJxK,EAA+ByK,UAAW,KAE7C,uCAnnB6C,iBAUb,iBAGA,kBAKC,yBAOU,yBAKR,yCAUJ,4FAkBC,qBAKuBC,EAAAA,4EA6BO,sBAG1B,mBA+CpB,wBAEO,sBAEF,qBAED,yBAEI,qBAEJ,yBAEI,sBAEH,eAEP,yBAEU,yBAEA,4BAEG,8BAEE,mDAIN,2BAEE,EAzK7BC,YAAAA,CAAapI,GACXA,EAAQjE,KAAKiJ,QAAUjJ,KAAKG,OA4E9BmM,gBAAAA,IAuBA/H,iBAAAA,IACEgI,EAAAA,EAAAA,GAAiBvM,OACjBwM,EAAAA,EAAAA,GAAgBxM,MAGlB,uBAAMwE,IACJC,EAAAA,EAAAA,GAAuBzE,MACvBA,KAAKgJ,SAAWhJ,KAAK8I,aACf2D,EAAAA,EAAAA,GAAczM,MAGtB0E,gBAAAA,IACEC,EAAAA,EAAAA,GAAmB3E,MAGrB0M,kBAAAA,IACEC,EAAAA,EAAAA,GAAsB3M,MAGxB4E,oBAAAA,GAAoB,IAAAgI,GAClBC,EAAAA,EAAAA,GAAoB7M,OACpB8M,EAAAA,EAAAA,GAAmB9M,MACA,QAAnB4M,EAAA5M,KAAKgI,sBAAc,IAAA4E,GAAnBA,EAAqBf,aAkDvBkB,qBAAAA,IACEC,EAAAA,EAAAA,GAAehN,KAAMA,KAAKiN,iBAgK5B,cAAMnL,SACEoD,EAAAA,EAAAA,GAAmBlF,OACzBkN,EAAAA,EAAAA,GAAmBlN,KAAKyI,aAgB1B,qBAAM0E,CAAgBC,GAAyB,IAAAC,EAC3B,QAAlBA,EAAArN,KAAKmI,qBAAa,IAAAkF,GAAlBA,EAAoBC,SAASF,GAS/BG,mBAAAA,GACE,MAAM,QAAEC,EAAO,aAAEC,EAAY,YAAEC,EAAW,iBAAE/C,GAAqB3K,KAC3D2N,EAAcH,GAClBjI,EAAAA,EAAAA,GAACqI,EAAAA,EAAO,CAAClI,MAAOvG,EAAa0O,MAAOJ,GACjCD,GAED,KAEEM,EAAkBJ,GAAcnI,EAAAA,EAAAA,GAAA,QAAMG,MAAOvG,GAAkBuO,GAAsB,KAE3F,OAAQ/C,IAAqBgD,IAAeG,EAKxC,MAJFvI,EAAAA,EAAAA,GAAA,OAAKG,MAAOvG,EAAmBmE,IAAI,kBAChCqK,EACAG,GAKPC,eAAAA,GACE,OACExI,EAAAA,EAAAA,GAAA,OAAKG,MAAOvG,EAAwBkE,QAASrD,KAAKyK,eAChDlF,EAAAA,EAAAA,GAAA,QAAMC,KAAMpG,EAAM8H,UAAWzB,aAAczF,KAAKqK,6BAKtD2D,0BAAAA,GACE,OACEzI,EAAAA,EAAAA,GAAA,OAAKG,MAAOvG,EAAmBkE,QAASrD,KAAK2K,iBAAkBrH,IAAI,2BACjEiC,EAAAA,EAAAA,GAAA,QAAMC,KAAMpG,EAAMqI,cAAehC,aAAczF,KAAK0K,iCAK1DuD,wBAAAA,GACE,MAAM,gBAAElE,GAAoB/J,KAE5B,OACEuF,EAAAA,EAAAA,GAAA,OACEG,MAAO,CAAE,CAACvG,IAAyB,EAAM,CAACA,IAAoB,GAC9DkE,QAAS0G,EACTzG,IAAI,yBAEJiC,EAAAA,EAAAA,GAAA,QACEC,KAAMpG,EAAMkI,mBACZ7B,aAAczF,KAAK8J,sCAM3BoE,sBAAAA,GACE,MAAM,cACJhE,EAAa,SACbiE,EAAQ,SACRxF,EAAQ,UACRe,EAAS,kBACT0E,EAAiB,YACjBC,EAAW,aACXjE,GACEpK,MACE,SAAEyJ,EAAQ,OAAE6E,EAAM,MAAErF,GAAUkF,EAE9BI,EAAQ,CAAChP,EAAcA,GAEH,OAAtB6O,GACFG,EAAMC,UAGR,MAAMC,EAAeJ,GACnB9I,EAAAA,EAAAA,GAAA,mCACiB3E,EAAAA,EAAAA,IAAe8I,GAAU,aAC5BD,EACZ9D,KAAM+D,EAAY6E,EAAM,GAAKA,EAAM,GACnC1N,GAAIoG,EACJP,QAAS1G,KAAKyJ,SACdnE,MAAOtF,KAAKsF,MACZxE,KAAM2I,EACNiF,MAAOhF,EAAY4E,EAAS7E,IAE5B,KAEEkF,EAAYhG,GAChBpD,EAAAA,EAAAA,GAAA,+BACc0D,EACZtD,KAAMpG,EACNsB,GAAIoG,EACJP,QAAS1G,KAAK6I,gBACdvD,MAAOtF,KAAKsF,MACZxE,KAAMmI,EACNyF,MAAOzF,IAEP,KAEE2F,GACJrJ,EAAAA,EAAAA,GAAA,QAAMC,KAAMpG,EAAMmI,iBAAkB9B,aAAczF,KAAKiK,mCAGnD4E,EAAgB3E,GAAiBuE,GAAgBE,GAAavE,EAEpE,OACE7E,EAAAA,EAAAA,GAAA,OACEG,MAAO,CAAE,CAACvG,IAAuB,EAAM,CAACA,IAAoB,GAC5DkE,QAASwL,EACTvL,IAAI,sBAEHsL,EACA5O,KAAK8O,aACLL,EACAE,GAKPG,UAAAA,GACE,MAAM,aAAE1E,EAAY,SAAE+D,EAAQ,SAAEY,EAAQ,mBAAEC,EAAkB,cAAEC,GAAkBjP,KAEhF,OACEuF,EAAAA,EAAAA,GAAA,uBACEU,eAAkC,OAAlB+I,QAAkB,IAAlBA,EAAAA,EAAsB,CAAC,MAAO,UAC9C3L,QAAS+G,EACT9G,IAAI,OACJlD,MAAO+N,EAASf,QAChBjN,KAAM4O,EACN/I,mBAAoBhG,KAAKgG,mBACzBD,UAAWkJ,IAEX1J,EAAAA,EAAAA,GAAA,kBACEI,KAAMpG,EACN+F,MAAOtF,KAAKsF,MACZ4J,KAAMC,EAAAA,EAAkB7P,QACxBwB,KAAMqN,EAASf,WAEjB7H,EAAAA,EAAAA,GAAA,QACEC,KAAMpG,EAAMoI,kBACZ/B,aAAczF,KAAKmK,qCAM3BiF,gBAAAA,GACE,MAAM,iBACJzE,EAAgB,gBAChBZ,EAAe,cACfG,EAAa,SACbvB,EAAQ,YACR0F,EAAW,aACXjE,EAAY,aACZK,GACEzK,KAEEqP,EAAoBrP,KAAKuN,sBAEzB+B,EACJ3E,KACE0E,GACFtF,GACAG,GACAmE,GACA1F,GACAyB,EAIF,OAFApK,KAAKsP,kBAAoBA,GAGvB/J,EAAAA,EAAAA,GAAA,UAAQG,MAAOvG,EAAYkE,SAAUiM,GAAqB7E,KACxDlF,EAAAA,EAAAA,GAAA,OACEG,MAAO,CAAE,CAACvG,IAAsB,EAAM,CAACA,GAA+BsL,GACtEpH,QAASiM,GAERtP,KAAKiO,2BACLjO,KAAKgO,6BACLqB,EACArP,KAAKkO,0BAEPlO,KAAK+N,kBACL/N,KAAKuP,oBAKZC,gBAAAA,GACE,MAAM,oBAAEvE,EAAmB,sBAAEE,EAAqB,iBAAEE,EAAgB,iBAAEN,GAAqB/K,KAErFyP,EACJtE,GAAyBF,GAAuBI,GAAoBN,EAEtE,OACExF,EAAAA,EAAAA,GAAA,UAAQG,MAAOvG,EAAYkE,QAASoM,IAClClK,EAAAA,EAAAA,GAAA,OAAKG,MAAOvG,EAAmBkE,QAASgI,IACtC9F,EAAAA,EAAAA,GAAA,QAAMC,KAAMpG,EAAMuI,OAAQlC,aAAczF,KAAKoL,2BAE/C7F,EAAAA,EAAAA,GAAA,OAAKG,MAAOvG,EAAiBkE,OAAQgI,IAAqBF,IACxD5F,EAAAA,EAAAA,GAAA,QAAMC,KAAMpG,EAAMyI,YAAapC,aAAczF,KAAKkL,gCAEpD3F,EAAAA,EAAAA,GAAA,OAAKG,MAAOvG,EAAekE,OAAQgI,IAAqBJ,IACtD1F,EAAAA,EAAAA,GAAA,QAAMC,KAAMpG,EAAMwI,UAAWnC,aAAczF,KAAKgL,8BAElDzF,EAAAA,EAAAA,GAAA,OAAKG,MAAOvG,EAAmBkE,OAAQgI,IAAqBN,IAC1DxF,EAAAA,EAAAA,GAAA,QACEjC,IAAI,sBACJkC,KAAMpG,EAAM0I,cACZrC,aAAczF,KAAK8K,kCAiB7B4E,aAAAA,GACE,OACEnK,EAAAA,EAAAA,GAAA,OACEG,MAAOvG,EACPkE,OAAQrD,KAAKqO,aAAerO,KAAK0J,UACjCiG,SAAU3P,KAAK4J,mBACfhE,IAAK5F,KAAK0L,mBAEVnG,EAAAA,EAAAA,GAAA,aACCvF,KAAK4P,aAKZC,mBAAAA,GACE,OACEtK,EAAAA,EAAAA,GAAA,OAAKG,MAAOvG,EAAmBkE,QAASrD,KAAKuL,mBAC3ChG,EAAAA,EAAAA,GAAA,QAAMC,KAAMpG,EAAMgI,cAAe3B,aAAczF,KAAKsL,kCAK1DiE,gBAAAA,GACE,OACEhK,EAAAA,EAAAA,GAAA,OAAKG,MAAOvG,EAAgBkE,QAASrD,KAAKyL,gBACxClG,EAAAA,EAAAA,GAAA,QAAMC,KAAMpG,EAAMiI,WAAY5B,aAAczF,KAAKwL,+BAKvDoE,SAAAA,GACE,OACErK,EAAAA,EAAAA,GAAA,OAAKG,MAAOvG,EAAkBkE,QAASrD,KAAK6K,SAC1CtF,EAAAA,EAAAA,GAAA,QAAMC,KAAMpG,EAAMsI,IAAKjC,aAAczF,KAAK4K,uBAahDhE,MAAAA,GACE,MAAM,SAAExD,EAAQ,QAAE0M,EAAO,SAAE9G,GAAahJ,KAElC+P,GACJxK,EAAAA,EAAAA,GAAA,WAAAjC,IAAA,wDACa1C,EAAAA,EAAAA,GAAckP,GACzBpK,MAAOvG,EACPkE,OAAQ2F,EACRpD,IAAK5F,KAAKuI,iBAETvI,KAAKoP,mBACLpP,KAAK0P,gBACL1P,KAAK6P,sBACL7P,KAAKwP,oBACNjK,EAAAA,EAAAA,GAAA,QAAMjC,IAAI,SAASkC,KAAMpG,EAAM+H,OAAQ1B,aAAczF,KAAK+L,0BAI9D,OACExG,EAAAA,EAAAA,GAACyK,EAAAA,GAAI,CAAA1M,IAAA,2CAAC2M,UAAWjQ,KAAK0I,sBACpBnD,EAAAA,EAAAA,GAAC2K,EAAAA,EAAoB,CAAA5M,IAAA,2CAACF,SAAUA,GAC7B0M,GAAUvK,EAAAA,EAAAA,GAAA,iBAAeuK,QAASA,IAAc,KAChDC,iOCnuBM,2+OCAV,MAAM5Q,EACJ,QADIA,EAEF,UAGEgR,EACR,GADQA,EAGR,ICgBQC,GAAK1Q,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,qEAuChB,KAAAqI,gBAAiBC,EAAAA,EAAAA,GAAe,UAAU,IAAMjI,KAAKqQ,iBAsE7C,KAAAzN,wBAA2BxB,IACjCpB,KAAKsQ,YAAaC,EAAAA,EAAAA,GAAqBnP,EAAM,EAGvC,KAAAoP,cAAiB9O,IACvB1B,KAAKyQ,SAAW/O,EAChB1B,KAAKqQ,cAAc,gBAzGc,6HAqCR,oBAOL,EA3BtB/D,gBAAAA,IAuBAS,qBAAAA,IACEC,EAAAA,EAAAA,GAAehN,KAAMA,KAAKiN,iBAW5B1I,iBAAAA,GAAiB,IAAAoH,GACfY,EAAAA,EAAAA,GAAiBvM,OACjBwM,EAAAA,EAAAA,GAAgBxM,MACG,QAAnB2L,EAAA3L,KAAKgI,sBAAc,IAAA2D,GAAnBA,EAAqBG,QAAQ9L,KAAK0B,IAGpC,uBAAM8C,SACEiI,EAAAA,EAAAA,GAAczM,MAGtB4E,oBAAAA,GAAoB,IAAAgH,GAClBiB,EAAAA,EAAAA,GAAoB7M,OACpB8M,EAAAA,EAAAA,GAAmB9M,MACA,QAAnB4L,EAAA5L,KAAKgI,sBAAc,IAAA4D,GAAnBA,EAAqBC,aASvBjF,MAAAA,GACE,MAAM,WAAE0J,EAAU,QAAER,EAAO,SAAE3B,GAAanO,KAE1C,OACEuF,EAAAA,EAAAA,GAAA,OAAAjC,IAAA,2CAAKoC,MAAOvG,GACT2Q,GACCvK,EAAAA,EAAAA,GAAA,kBACEnF,MAAO+N,EAAS2B,QAChBlK,IAAK5F,KAAKwQ,cACVlL,MAAOtF,KAAK0Q,cAEZ,MACJnL,EAAAA,EAAAA,GAAA,OAAAjC,IAAA,2CAAKoC,MAAOvG,EAAakE,QAASiN,IAChC/K,EAAAA,EAAAA,GAAA,QAAAjC,IAAA,2CAAMmC,aAAczF,KAAK4C,4BAqBzB+N,QAAAA,CAASC,GACf,OAAIA,EAAOT,EACF,IACES,GAAQT,EACV,IAEA,IAIHE,YAAAA,GAAY,IAAAQ,EAClB,MAAM,SAAEJ,EAAQ,GAAE/O,GAAO1B,KAEpByQ,IAILzQ,KAAK0Q,YAAc1Q,KAAK2Q,SAAkD,QAA1CE,EAAC/M,KAAKgN,IAAIpP,EAAGqP,aAAcrP,EAAGsP,oBAAY,IAAAH,EAAAA,EAAI,yMC/JjE","sources":["../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/utils/array.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/action-menu/resources.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/action-menu/action-menu.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/action-menu/action-menu.scss?tag=calcite-action-menu&encapsulation=shadow","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/panel/resources.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/panel/panel.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/panel/panel.scss?tag=calcite-panel&encapsulation=shadow","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/scrim/resources.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.tsx","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.scss?tag=calcite-scrim&encapsulation=shadow"],"sourcesContent":["export function getRoundRobinIndex(index: number, total: number): number {\n  return (index + total) % total;\n}\n","export const CSS = {\n  menu: \"menu\",\n  defaultTrigger: \"default-trigger\",\n};\n\nexport const SLOTS = {\n  tooltip: \"tooltip\",\n  trigger: \"trigger\",\n};\n\nexport const ICONS = {\n  menu: \"ellipsis\",\n} as const;\n\nexport const activeAttr = \"data-active\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from \"@stencil/core\";\nimport { Fragment, VNode } from \"@stencil/core/internal\";\nimport { getRoundRobinIndex } from \"../../utils/array\";\nimport { focusElement, toAriaBoolean } from \"../../utils/dom\";\nimport { FlipPlacement, LogicalPlacement, OverlayPositioning } from \"../../utils/floating-ui\";\nimport { guid } from \"../../utils/guid\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Appearance, Scale } from \"../interfaces\";\nimport { activeAttr, CSS, ICONS, SLOTS } from \"./resources\";\n\nconst SUPPORTED_MENU_NAV_KEYS = [\"ArrowUp\", \"ArrowDown\", \"End\", \"Home\"];\n\n/**\n * @slot - A slot for adding `calcite-action`s.\n * @slot trigger - A slot for adding a `calcite-action` to trigger opening the menu.\n * @slot tooltip - A slot for adding an tooltip for the menu.\n */\n@Component({\n  tag: \"calcite-action-menu\",\n  styleUrl: \"action-menu.scss\",\n  shadow: true,\n})\nexport class ActionMenu implements LoadableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.connectMenuButtonEl();\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    this.disconnectMenuButtonEl();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** Specifies the appearance of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"solid\" | \"transparent\", Appearance> = \"solid\";\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(): void {\n    this.open = false;\n    this.setTooltipReferenceElement();\n  }\n\n  /**\n   * Specifies the component's fallback slotted content `placement` when it's initial or specified `placement` has insufficient space available.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  /**\n   *  Specifies the text string for the component.\n   */\n  @Prop() label!: string;\n\n  /**\n   * When `true`, the component is open.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(open: boolean): void {\n    this.activeMenuItemIndex = this.open ? 0 : -1;\n    if (this.menuButtonEl) {\n      this.menuButtonEl.active = open;\n    }\n    this.calciteActionMenuOpen.emit();\n\n    this.setTooltipReferenceElement();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * Determines where the component will be positioned relative to the `referenceElement`.\n   */\n  @Prop({ reflect: true }) placement: LogicalPlacement = \"auto\";\n\n  /**\n   * Specifies the size of the component's trigger `calcite-action`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the `open` property is toggled.\n   *\n   */\n  @Event({ cancelable: false }) calciteActionMenuOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionMenuElement;\n\n  @State() menuButtonEl: HTMLCalciteActionElement;\n\n  slottedMenuButtonEl: HTMLCalciteActionElement;\n\n  defaultMenuButtonEl: HTMLCalciteActionElement;\n\n  actionElements: HTMLCalciteActionElement[] = [];\n\n  guid = `calcite-action-menu-${guid()}`;\n\n  menuId = `${this.guid}-menu`;\n\n  menuButtonId = `${this.guid}-menu-button`;\n\n  tooltipEl: HTMLCalciteTooltipElement;\n\n  @State() activeMenuItemIndex = -1;\n\n  @Watch(\"activeMenuItemIndex\")\n  activeMenuItemIndexHandler(): void {\n    this.updateActions(this.actionElements);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    return focusElement(this.menuButtonEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Component Methods\n  //\n  // --------------------------------------------------------------------------\n\n  connectMenuButtonEl = (): void => {\n    const { menuButtonId, menuId, open, label } = this;\n    const menuButtonEl = this.slottedMenuButtonEl || this.defaultMenuButtonEl;\n\n    if (this.menuButtonEl === menuButtonEl) {\n      return;\n    }\n\n    this.disconnectMenuButtonEl();\n\n    this.menuButtonEl = menuButtonEl;\n\n    this.setTooltipReferenceElement();\n\n    if (!menuButtonEl) {\n      return;\n    }\n\n    menuButtonEl.active = open;\n    menuButtonEl.setAttribute(\"aria-controls\", menuId);\n    menuButtonEl.setAttribute(\"aria-expanded\", toAriaBoolean(open));\n    menuButtonEl.setAttribute(\"aria-haspopup\", \"true\");\n\n    if (!menuButtonEl.id) {\n      menuButtonEl.id = menuButtonId;\n    }\n\n    if (!menuButtonEl.label) {\n      menuButtonEl.label = label;\n    }\n\n    if (!menuButtonEl.text) {\n      menuButtonEl.text = label;\n    }\n\n    menuButtonEl.addEventListener(\"click\", this.menuButtonClick);\n    menuButtonEl.addEventListener(\"keydown\", this.menuButtonKeyDown);\n  };\n\n  disconnectMenuButtonEl = (): void => {\n    const { menuButtonEl } = this;\n\n    if (!menuButtonEl) {\n      return;\n    }\n\n    menuButtonEl.removeEventListener(\"click\", this.menuButtonClick);\n    menuButtonEl.removeEventListener(\"keydown\", this.menuButtonKeyDown);\n  };\n\n  setMenuButtonEl = (event: Event): void => {\n    const actions = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el): el is HTMLCalciteActionElement => el?.matches(\"calcite-action\"));\n\n    this.slottedMenuButtonEl = actions[0];\n    this.connectMenuButtonEl();\n  };\n\n  setDefaultMenuButtonEl = (el: HTMLCalciteActionElement): void => {\n    this.defaultMenuButtonEl = el;\n    this.connectMenuButtonEl();\n  };\n\n  renderMenuButton(): VNode {\n    const { appearance, label, scale, expanded } = this;\n\n    const menuButtonSlot = (\n      <slot name={SLOTS.trigger} onSlotchange={this.setMenuButtonEl}>\n        <calcite-action\n          appearance={appearance}\n          class={CSS.defaultTrigger}\n          icon={ICONS.menu}\n          ref={this.setDefaultMenuButtonEl}\n          scale={scale}\n          text={label}\n          textEnabled={expanded}\n        />\n      </slot>\n    );\n\n    return menuButtonSlot;\n  }\n\n  renderMenuItems(): VNode {\n    const {\n      actionElements,\n      activeMenuItemIndex,\n      open,\n      menuId,\n      menuButtonEl,\n      label,\n      placement,\n      overlayPositioning,\n      flipPlacements,\n    } = this;\n\n    const activeAction = actionElements[activeMenuItemIndex];\n    const activeDescendantId = activeAction?.id || null;\n\n    return (\n      <calcite-popover\n        autoClose={true}\n        flipPlacements={flipPlacements}\n        focusTrapDisabled={true}\n        label={label}\n        offsetDistance={0}\n        onCalcitePopoverClose={this.handlePopoverClose}\n        onCalcitePopoverOpen={this.handlePopoverOpen}\n        open={open}\n        overlayPositioning={overlayPositioning}\n        placement={placement}\n        pointerDisabled={true}\n        referenceElement={menuButtonEl}\n      >\n        <div\n          aria-activedescendant={activeDescendantId}\n          aria-labelledby={menuButtonEl?.id}\n          class={CSS.menu}\n          id={menuId}\n          onClick={this.handleCalciteActionClick}\n          role=\"menu\"\n          tabIndex={-1}\n        >\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </div>\n      </calcite-popover>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Fragment>\n        {this.renderMenuButton()}\n        {this.renderMenuItems()}\n        <slot name={SLOTS.tooltip} onSlotchange={this.updateTooltip} />\n      </Fragment>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleCalciteActionClick = (): void => {\n    this.open = false;\n    this.setFocus();\n  };\n\n  private menuButtonClick = (): void => {\n    this.toggleOpen();\n  };\n\n  updateTooltip = (event: Event): void => {\n    const tooltips = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el): el is HTMLCalciteTooltipElement => el?.matches(\"calcite-tooltip\"));\n\n    this.tooltipEl = tooltips[0];\n    this.setTooltipReferenceElement();\n  };\n\n  setTooltipReferenceElement = (): void => {\n    const { tooltipEl, expanded, menuButtonEl, open } = this;\n\n    if (tooltipEl) {\n      tooltipEl.referenceElement = !expanded && !open ? menuButtonEl : null;\n    }\n  };\n\n  updateAction = (action: HTMLCalciteActionElement, index: number): void => {\n    const { guid, activeMenuItemIndex } = this;\n    const id = `${guid}-action-${index}`;\n\n    action.tabIndex = -1;\n    action.setAttribute(\"role\", \"menuitem\");\n\n    if (!action.id) {\n      action.id = id;\n    }\n\n    // data attribute is used to style the \"activeMenuItemIndex\" action using token focus styling.\n    action.toggleAttribute(activeAttr, index === activeMenuItemIndex);\n  };\n\n  updateActions = (actions: HTMLCalciteActionElement[]): void => {\n    actions?.forEach(this.updateAction);\n  };\n\n  handleDefaultSlotChange = (event: Event): void => {\n    const actions = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .reduce<HTMLCalciteActionElement[]>((previousValue, currentValue) => {\n        if (currentValue?.matches(\"calcite-action\")) {\n          previousValue.push(currentValue as HTMLCalciteActionElement);\n          return previousValue;\n        }\n\n        if (currentValue?.matches(\"calcite-action-group\")) {\n          return previousValue.concat(Array.from(currentValue.querySelectorAll(\"calcite-action\")));\n        }\n\n        return previousValue;\n      }, []);\n\n    this.actionElements = actions.filter((action) => !action.disabled && !action.hidden);\n  };\n\n  isValidKey(key: string, supportedKeys: string[]): boolean {\n    return !!supportedKeys.find((k) => k === key);\n  }\n\n  menuButtonKeyDown = (event: KeyboardEvent): void => {\n    const { key } = event;\n    const { actionElements, activeMenuItemIndex, open } = this;\n\n    if (!actionElements.length) {\n      return;\n    }\n\n    if (isActivationKey(key)) {\n      event.preventDefault();\n\n      if (!open) {\n        this.toggleOpen();\n        return;\n      }\n\n      const action = actionElements[activeMenuItemIndex];\n      action ? action.click() : this.toggleOpen(false);\n    }\n\n    if (key === \"Tab\") {\n      this.open = false;\n      return;\n    }\n\n    if (key === \"Escape\") {\n      this.toggleOpen(false);\n      event.preventDefault();\n      return;\n    }\n\n    this.handleActionNavigation(event, key, actionElements);\n  };\n\n  handleActionNavigation = (\n    event: KeyboardEvent,\n    key: string,\n    actions: HTMLCalciteActionElement[],\n  ): void => {\n    if (!this.isValidKey(key, SUPPORTED_MENU_NAV_KEYS)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (!this.open) {\n      this.toggleOpen();\n\n      if (key === \"Home\" || key === \"ArrowDown\") {\n        this.activeMenuItemIndex = 0;\n      }\n\n      if (key === \"End\" || key === \"ArrowUp\") {\n        this.activeMenuItemIndex = actions.length - 1;\n      }\n\n      return;\n    }\n\n    if (key === \"Home\") {\n      this.activeMenuItemIndex = 0;\n    }\n\n    if (key === \"End\") {\n      this.activeMenuItemIndex = actions.length - 1;\n    }\n\n    const currentIndex = this.activeMenuItemIndex;\n\n    if (key === \"ArrowUp\") {\n      this.activeMenuItemIndex = getRoundRobinIndex(Math.max(currentIndex - 1, -1), actions.length);\n    }\n\n    if (key === \"ArrowDown\") {\n      this.activeMenuItemIndex = getRoundRobinIndex(currentIndex + 1, actions.length);\n    }\n  };\n\n  toggleOpenEnd = (): void => {\n    this.setFocus();\n    this.el.removeEventListener(\"calcitePopoverOpen\", this.toggleOpenEnd);\n  };\n\n  toggleOpen = (value = !this.open): void => {\n    this.el.addEventListener(\"calcitePopoverOpen\", this.toggleOpenEnd);\n    this.open = value;\n  };\n\n  private handlePopoverOpen = (): void => {\n    this.open = true;\n  };\n\n  private handlePopoverClose = (): void => {\n    this.open = false;\n  };\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-menu-items-space: Specifies the space between actions in the menu.\n *\n */\n\n:host {\n  @apply text-1\n  box-border\n  flex\n  flex-col;\n}\n\n::slotted(calcite-action-group:not(:last-of-type)) {\n  border-block-end-width: var(--calcite-border-width-sm);\n}\n\n.default-trigger {\n  @apply relative\n  h-full\n  flex-initial\n  self-stretch;\n}\n\n@include slotted(\"trigger\", \"calcite-action\") {\n  @apply relative\n  h-full\n  flex-initial\n  self-stretch;\n}\n\n.menu {\n  @apply flex\n  flex-col\n  flex-nowrap\n  outline-none\n  overflow-y-auto\n  overflow-x-hidden\n  max-h-menu;\n  gap: var(--calcite-action-menu-items-space, 0);\n}\n\n@include base-component();\n","export const CSS = {\n  actionBarContainer: \"action-bar-container\",\n  backButton: \"back-button\",\n  container: \"container\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n  header: \"header\",\n  headerContainer: \"header-container\",\n  headerContainerBorderEnd: \"header-container--border-end\",\n  heading: \"heading\",\n  summary: \"summary\",\n  description: \"description\",\n  headerContent: \"header-content\",\n  headerActions: \"header-actions\",\n  headerActionsEnd: \"header-actions--end\",\n  headerActionsStart: \"header-actions--start\",\n  contentWrapper: \"content-wrapper\",\n  fabContainer: \"fab-container\",\n  footer: \"footer\",\n  footerContent: \"footer-content\",\n  footerActions: \"footer-actions\",\n  footerStart: \"footer-start\",\n  footerEnd: \"footer-end\",\n};\n\nexport const IDS = {\n  close: \"close\",\n  collapse: \"collapse\",\n};\n\nexport const ICONS = {\n  close: \"x\",\n  menu: \"ellipsis\",\n  backLeft: \"chevron-left\",\n  backRight: \"chevron-right\",\n  expand: \"chevron-down\",\n  collapse: \"chevron-up\",\n} as const;\n\nexport const SLOTS = {\n  actionBar: \"action-bar\",\n  alerts: \"alerts\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n  headerActionsStart: \"header-actions-start\",\n  headerActionsEnd: \"header-actions-end\",\n  headerMenuActions: \"header-menu-actions\",\n  headerContent: \"header-content\",\n  fab: \"fab\",\n  footer: \"footer\",\n  footerEnd: \"footer-end\",\n  footerStart: \"footer-start\",\n  footerActions: \"footer-actions\",\n};\n\nexport const HEADING_LEVEL = 3;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  focusFirstTabbable,\n  slotChangeGetAssignedElements,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { SLOTS as ACTION_MENU_SLOTS } from \"../action-menu/resources\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  defaultEndMenuPlacement,\n  FlipPlacement,\n  LogicalPlacement,\n  OverlayPositioning,\n} from \"../../utils/floating-ui\";\nimport { CollapseDirection } from \"../interfaces\";\nimport { Scale } from \"../interfaces\";\nimport { PanelMessages } from \"./assets/panel/t9n\";\nimport { CSS, ICONS, IDS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding custom content.\n * @slot action-bar - A slot for adding a `calcite-action-bar` to the component.\n * @slot alerts - A slot for adding `calcite-alert`s to the component.\n * @slot content-bottom - A slot for adding content below the unnamed (default) slot and above the footer slot (if populated)\n * @slot content-top - A slot for adding content above the unnamed (default) slot and below the action-bar slot (if populated).\n * @slot header-actions-start - A slot for adding actions or content to the start side of the header.\n * @slot header-actions-end - A slot for adding actions or content to the end side of the header.\n * @slot header-content - A slot for adding custom content to the header.\n * @slot header-menu-actions - A slot for adding an overflow menu with actions inside a `calcite-dropdown`.\n * @slot fab - A slot for adding a `calcite-fab` (floating action button) to perform an action.\n * @slot footer - A slot for adding custom content to the component's footer. Should not be used with the `\"footer-start\"` or `\"footer-end\"` slots.\n * @slot footer-actions - [Deprecated] Use the `footer-start` and `footer-end` slots instead. A slot for adding `calcite-button`s to the component's footer.\n * @slot footer-end - A slot for adding a trailing footer custom content. Should not be used with the `\"footer\"` slot.\n * @slot footer-start - A slot for adding a leading footer custom content. Should not be used with the `\"footer\"` slot.\n */\n@Component({\n  tag: \"calcite-panel\",\n  styleUrl: \"panel.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Panel\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** Passes a function to run before the component closes. */\n  @Prop() beforeClose: () => Promise<void>;\n\n  /** When `true`, the component will be hidden. */\n  @Prop({ mutable: true, reflect: true }) closed = false;\n\n  @Watch(\"closed\")\n  toggleDialog(value: boolean): void {\n    value ? this.close() : this.open();\n  }\n\n  /**\n   *  When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** When `true`, displays a close button in the trailing side of the header. */\n  @Prop({ reflect: true }) closable = false;\n\n  /**\n   * When `true`, hides the component's content area.\n   */\n  @Prop({ reflect: true }) collapsed = false;\n\n  /**\n   * Specifies the direction of the collapse.\n   *\n   * @internal\n   */\n  @Prop() collapseDirection: CollapseDirection = \"down\";\n\n  /**\n   * When `true`, the component is collapsible.\n   */\n  @Prop({ reflect: true }) collapsible = false;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /** A description for the component. */\n  @Prop() description: string;\n\n  /**\n   * Specifies the component's fallback menu `placement` when it's initial or specified `placement` has insufficient space available.\n   */\n  @Prop() menuFlipPlacements: FlipPlacement[];\n\n  /**\n   * When `true`, the action menu items in the `header-menu-actions` slot are open.\n   */\n  @Prop({ reflect: true }) menuOpen = false;\n\n  /**\n   * Determines where the action menu will be positioned.\n   */\n  @Prop({ reflect: true }) menuPlacement: LogicalPlacement = defaultEndMenuPlacement;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PanelMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PanelMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.isClosed = this.closed;\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePanelElement;\n\n  containerEl: HTMLElement;\n\n  panelScrollEl: HTMLElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.resizeHandler());\n\n  @State() isClosed = false;\n\n  @State() hasStartActions = false;\n\n  @State() hasEndActions = false;\n\n  @State() hasMenuItems = false;\n\n  @State() hasHeaderContent = false;\n\n  @State() hasActionBar = false;\n\n  @State() hasContentBottom = false;\n\n  @State() hasContentTop = false;\n\n  @State() hasFab = false;\n\n  @State() hasFooterActions = false;\n\n  @State() hasFooterContent = false;\n\n  @State() hasFooterEndContent = false;\n\n  @State() hasFooterStartContent = false;\n\n  @State() defaultMessages: PanelMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @State() showHeaderContent = false;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the close button is clicked.\n   */\n  @Event({ cancelable: false }) calcitePanelClose: EventEmitter<void>;\n\n  /**\n   * Fires when the collapse button is clicked.\n   */\n  @Event({ cancelable: false }) calcitePanelToggle: EventEmitter<void>;\n\n  /**\n   * Fires when the content is scrolled.\n   */\n  @Event({ cancelable: false }) calcitePanelScroll: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  resizeHandler = (): void => {\n    const { panelScrollEl } = this;\n\n    if (\n      !panelScrollEl ||\n      typeof panelScrollEl.scrollHeight !== \"number\" ||\n      typeof panelScrollEl.offsetHeight !== \"number\"\n    ) {\n      return;\n    }\n\n    const hasScrollingContent = panelScrollEl.scrollHeight > panelScrollEl.offsetHeight;\n\n    // intentionally using setAttribute to avoid reflecting -1 so default browser behavior will occur\n    if (hasScrollingContent) {\n      panelScrollEl.setAttribute(\"tabindex\", \"0\");\n    } else {\n      panelScrollEl.removeAttribute(\"tabindex\");\n    }\n  };\n\n  setContainerRef = (node: HTMLElement): void => {\n    this.containerEl = node;\n  };\n\n  panelKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.closable && event.key === \"Escape\" && !event.defaultPrevented) {\n      this.handleUserClose();\n      event.preventDefault();\n    }\n  };\n\n  private handleUserClose = (): void => {\n    this.closed = true;\n    this.calcitePanelClose.emit();\n  };\n\n  open = (): void => {\n    this.isClosed = false;\n  };\n\n  close = async (): Promise<void> => {\n    const beforeClose = this.beforeClose ?? (() => Promise.resolve());\n\n    try {\n      await beforeClose();\n    } catch (_error) {\n      // close prevented\n      requestAnimationFrame(() => {\n        this.closed = false;\n      });\n      return;\n    }\n\n    this.isClosed = true;\n  };\n\n  collapse = (): void => {\n    this.collapsed = !this.collapsed;\n    this.calcitePanelToggle.emit();\n  };\n\n  panelScrollHandler = (): void => {\n    this.calcitePanelScroll.emit();\n  };\n\n  handleHeaderActionsStartSlotChange = (event: Event): void => {\n    this.hasStartActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleHeaderActionsEndSlotChange = (event: Event): void => {\n    this.hasEndActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleHeaderMenuActionsSlotChange = (event: Event): void => {\n    this.hasMenuItems = slotChangeHasAssignedElement(event);\n  };\n\n  handleActionBarSlotChange = (event: Event): void => {\n    const actionBars = slotChangeGetAssignedElements(event).filter(\n      (el): el is HTMLCalciteActionBarElement => el?.matches(\"calcite-action-bar\"),\n    );\n\n    actionBars.forEach((actionBar) => (actionBar.layout = \"horizontal\"));\n\n    this.hasActionBar = !!actionBars.length;\n  };\n\n  handleHeaderContentSlotChange = (event: Event): void => {\n    this.hasHeaderContent = slotChangeHasAssignedElement(event);\n  };\n\n  handleFabSlotChange = (event: Event): void => {\n    this.hasFab = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterActionsSlotChange = (event: Event): void => {\n    this.hasFooterActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterEndSlotChange = (event: Event): void => {\n    this.hasFooterEndContent = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterStartSlotChange = (event: Event): void => {\n    this.hasFooterStartContent = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterSlotChange = (event: Event): void => {\n    this.hasFooterContent = slotChangeHasAssignedElement(event);\n  };\n\n  private contentBottomSlotChangeHandler = (event: Event): void => {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  };\n\n  private contentTopSlotChangeHandler = (event: Event): void => {\n    this.hasContentTop = slotChangeHasAssignedElement(event);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.containerEl);\n  }\n\n  /**\n   * Scrolls the component's content to a specified set of coordinates.\n   *\n   * @example\n   * myCalciteFlowItem.scrollContentTo({\n   *   left: 0, // Specifies the number of pixels along the X axis to scroll the window or element.\n   *   top: 0, // Specifies the number of pixels along the Y axis to scroll the window or element\n   *   behavior: \"auto\" // Specifies whether the scrolling should animate smoothly (smooth), or happen instantly in a single jump (auto, the default value).\n   * });\n   * @param options - allows specific coordinates to be defined.\n   * @returns - promise that resolves once the content is scrolled to.\n   */\n  @Method()\n  async scrollContentTo(options?: ScrollToOptions): Promise<void> {\n    this.panelScrollEl?.scrollTo(options);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderHeaderContent(): VNode {\n    const { heading, headingLevel, description, hasHeaderContent } = this;\n    const headingNode = heading ? (\n      <Heading class={CSS.heading} level={headingLevel}>\n        {heading}\n      </Heading>\n    ) : null;\n\n    const descriptionNode = description ? <span class={CSS.description}>{description}</span> : null;\n\n    return !hasHeaderContent && (headingNode || descriptionNode) ? (\n      <div class={CSS.headerContent} key=\"header-content\">\n        {headingNode}\n        {descriptionNode}\n      </div>\n    ) : null;\n  }\n\n  renderActionBar(): VNode {\n    return (\n      <div class={CSS.actionBarContainer} hidden={!this.hasActionBar}>\n        <slot name={SLOTS.actionBar} onSlotchange={this.handleActionBarSlotChange} />\n      </div>\n    );\n  }\n\n  renderHeaderSlottedContent(): VNode {\n    return (\n      <div class={CSS.headerContent} hidden={!this.hasHeaderContent} key=\"slotted-header-content\">\n        <slot name={SLOTS.headerContent} onSlotchange={this.handleHeaderContentSlotChange} />\n      </div>\n    );\n  }\n\n  renderHeaderStartActions(): VNode {\n    const { hasStartActions } = this;\n\n    return (\n      <div\n        class={{ [CSS.headerActionsStart]: true, [CSS.headerActions]: true }}\n        hidden={!hasStartActions}\n        key=\"header-actions-start\"\n      >\n        <slot\n          name={SLOTS.headerActionsStart}\n          onSlotchange={this.handleHeaderActionsStartSlotChange}\n        />\n      </div>\n    );\n  }\n\n  renderHeaderActionsEnd(): VNode {\n    const {\n      hasEndActions,\n      messages,\n      closable,\n      collapsed,\n      collapseDirection,\n      collapsible,\n      hasMenuItems,\n    } = this;\n    const { collapse, expand, close } = messages;\n\n    const icons = [ICONS.expand, ICONS.collapse];\n\n    if (collapseDirection === \"up\") {\n      icons.reverse();\n    }\n\n    const collapseNode = collapsible ? (\n      <calcite-action\n        aria-expanded={toAriaBoolean(!collapsed)}\n        aria-label={collapse}\n        icon={collapsed ? icons[0] : icons[1]}\n        id={IDS.collapse}\n        onClick={this.collapse}\n        scale={this.scale}\n        text={collapse}\n        title={collapsed ? expand : collapse}\n      />\n    ) : null;\n\n    const closeNode = closable ? (\n      <calcite-action\n        aria-label={close}\n        icon={ICONS.close}\n        id={IDS.close}\n        onClick={this.handleUserClose}\n        scale={this.scale}\n        text={close}\n        title={close}\n      />\n    ) : null;\n\n    const slotNode = (\n      <slot name={SLOTS.headerActionsEnd} onSlotchange={this.handleHeaderActionsEndSlotChange} />\n    );\n\n    const showContainer = hasEndActions || collapseNode || closeNode || hasMenuItems;\n\n    return (\n      <div\n        class={{ [CSS.headerActionsEnd]: true, [CSS.headerActions]: true }}\n        hidden={!showContainer}\n        key=\"header-actions-end\"\n      >\n        {slotNode}\n        {this.renderMenu()}\n        {collapseNode}\n        {closeNode}\n      </div>\n    );\n  }\n\n  renderMenu(): VNode {\n    const { hasMenuItems, messages, menuOpen, menuFlipPlacements, menuPlacement } = this;\n\n    return (\n      <calcite-action-menu\n        flipPlacements={menuFlipPlacements ?? [\"top\", \"bottom\"]}\n        hidden={!hasMenuItems}\n        key=\"menu\"\n        label={messages.options}\n        open={menuOpen}\n        overlayPositioning={this.overlayPositioning}\n        placement={menuPlacement}\n      >\n        <calcite-action\n          icon={ICONS.menu}\n          scale={this.scale}\n          slot={ACTION_MENU_SLOTS.trigger}\n          text={messages.options}\n        />\n        <slot\n          name={SLOTS.headerMenuActions}\n          onSlotchange={this.handleHeaderMenuActionsSlotChange}\n        />\n      </calcite-action-menu>\n    );\n  }\n\n  renderHeaderNode(): VNode {\n    const {\n      hasHeaderContent,\n      hasStartActions,\n      hasEndActions,\n      closable,\n      collapsible,\n      hasMenuItems,\n      hasActionBar,\n    } = this;\n\n    const headerContentNode = this.renderHeaderContent();\n\n    const showHeaderContent =\n      hasHeaderContent ||\n      !!headerContentNode ||\n      hasStartActions ||\n      hasEndActions ||\n      collapsible ||\n      closable ||\n      hasMenuItems;\n\n    this.showHeaderContent = showHeaderContent;\n\n    return (\n      <header class={CSS.header} hidden={!(showHeaderContent || hasActionBar)}>\n        <div\n          class={{ [CSS.headerContainer]: true, [CSS.headerContainerBorderEnd]: hasActionBar }}\n          hidden={!showHeaderContent}\n        >\n          {this.renderHeaderStartActions()}\n          {this.renderHeaderSlottedContent()}\n          {headerContentNode}\n          {this.renderHeaderActionsEnd()}\n        </div>\n        {this.renderActionBar()}\n        {this.renderContentTop()}\n      </header>\n    );\n  }\n\n  renderFooterNode(): VNode {\n    const { hasFooterEndContent, hasFooterStartContent, hasFooterContent, hasFooterActions } = this;\n\n    const showFooter =\n      hasFooterStartContent || hasFooterEndContent || hasFooterContent || hasFooterActions;\n\n    return (\n      <footer class={CSS.footer} hidden={!showFooter}>\n        <div class={CSS.footerContent} hidden={!hasFooterContent}>\n          <slot name={SLOTS.footer} onSlotchange={this.handleFooterSlotChange} />\n        </div>\n        <div class={CSS.footerStart} hidden={hasFooterContent || !hasFooterStartContent}>\n          <slot name={SLOTS.footerStart} onSlotchange={this.handleFooterStartSlotChange} />\n        </div>\n        <div class={CSS.footerEnd} hidden={hasFooterContent || !hasFooterEndContent}>\n          <slot name={SLOTS.footerEnd} onSlotchange={this.handleFooterEndSlotChange} />\n        </div>\n        <div class={CSS.footerActions} hidden={hasFooterContent || !hasFooterActions}>\n          <slot\n            key=\"footer-actions-slot\"\n            name={SLOTS.footerActions}\n            onSlotchange={this.handleFooterActionsSlotChange}\n          />\n        </div>\n      </footer>\n    );\n  }\n\n  setPanelScrollEl = (el: HTMLElement): void => {\n    this.panelScrollEl = el;\n    this.resizeObserver?.disconnect();\n\n    if (el) {\n      this.resizeObserver?.observe(el);\n      this.resizeHandler();\n    }\n  };\n\n  renderContent(): VNode {\n    return (\n      <div\n        class={CSS.contentWrapper}\n        hidden={this.collapsible && this.collapsed}\n        onScroll={this.panelScrollHandler}\n        ref={this.setPanelScrollEl}\n      >\n        <slot />\n        {this.renderFab()}\n      </div>\n    );\n  }\n\n  renderContentBottom(): VNode {\n    return (\n      <div class={CSS.contentBottom} hidden={!this.hasContentBottom}>\n        <slot name={SLOTS.contentBottom} onSlotchange={this.contentBottomSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  renderContentTop(): VNode {\n    return (\n      <div class={CSS.contentTop} hidden={!this.hasContentTop}>\n        <slot name={SLOTS.contentTop} onSlotchange={this.contentTopSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  renderFab(): VNode {\n    return (\n      <div class={CSS.fabContainer} hidden={!this.hasFab}>\n        <slot name={SLOTS.fab} onSlotchange={this.handleFabSlotChange} />\n      </div>\n    );\n  }\n\n  handleAlertsSlotChange = (event: Event): void => {\n    slotChangeGetAssignedElements(event)?.map((el) => {\n      if (el.nodeName === \"CALCITE-ALERT\") {\n        (el as HTMLCalciteAlertElement).embedded = true;\n      }\n    });\n  };\n\n  render(): VNode {\n    const { disabled, loading, isClosed } = this;\n\n    const panelNode = (\n      <article\n        aria-busy={toAriaBoolean(loading)}\n        class={CSS.container}\n        hidden={isClosed}\n        ref={this.setContainerRef}\n      >\n        {this.renderHeaderNode()}\n        {this.renderContent()}\n        {this.renderContentBottom()}\n        {this.renderFooterNode()}\n        <slot key=\"alerts\" name={SLOTS.alerts} onSlotchange={this.handleAlertsSlotChange} />\n      </article>\n    );\n\n    return (\n      <Host onKeyDown={this.panelKeyDownHandler}>\n        <InteractiveContainer disabled={disabled}>\n          {loading ? <calcite-scrim loading={loading} /> : null}\n          {panelNode}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-panel-content-space: Specifies the padding of the component's content.\n * @prop --calcite-panel-footer-padding: Specifies the padding of the component's footer.\n * @prop --calcite-panel-header-border-block-end: Specifies the component header's block end border.\n * @prop --calcite-panel-background-color: Specifies the background color of the component.\n */\n\n:host {\n  @extend %component-host;\n  @apply relative flex w-full h-full flex-auto overflow-hidden;\n\n  --calcite-min-header-height: calc(var(--calcite-icon-size) * 3);\n}\n\n@include disabled();\n\n@import \"../../assets/styles/header\";\n\n:host([scale=\"s\"]) {\n  --calcite-internal-panel-default-padding: var(--calcite-spacing-sm);\n  --calcite-internal-panel-header-vertical-padding: 10px; // this should use a spacing token once made available\n\n  .header-content {\n    .heading {\n      @apply text-n1h;\n    }\n\n    .description {\n      @apply text-n2h;\n    }\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-internal-panel-default-padding: var(--calcite-spacing-md);\n  --calcite-internal-panel-header-vertical-padding: var(--calcite-spacing-lg);\n\n  .header-content {\n    .heading {\n      @apply text-0h;\n    }\n\n    .description {\n      @apply text-n1h;\n    }\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-internal-panel-default-padding: var(--calcite-spacing-xl);\n  --calcite-internal-panel-header-vertical-padding: var(--calcite-spacing-xxl);\n\n  .header-content {\n    .heading {\n      @apply text-1h;\n    }\n\n    .description {\n      @apply text-0h;\n    }\n  }\n}\n\n.content-top,\n.content-bottom {\n  @apply flex items-start self-stretch;\n\n  border-block-start: 1px solid var(--calcite-color-border-3);\n  background-color: var(--calcite-color-foreground-1);\n}\n\n.container {\n  @apply relative bg-background m-0 flex w-full flex-auto flex-col items-stretch p-0;\n\n  transition:\n    max-block-size var(--calcite-animation-timing),\n    inline-size var(--calcite-animation-timing);\n}\n\n.container[hidden] {\n  @apply hidden;\n}\n\n.header {\n  @apply bg-foreground-1 flex flex-col z-header;\n  border-block-end: var(--calcite-panel-header-border-block-end, 1px solid var(--calcite-color-border-3));\n}\n\n.header-container {\n  @apply flex flex-row w-full\n  items-stretch\n  justify-start;\n  flex: 0 0 auto;\n}\n\n.header-container--border-end {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n.action-bar-container {\n  @apply w-full;\n}\n\n.action-bar-container ::slotted(calcite-action-bar) {\n  @apply w-full;\n}\n\n.header-content {\n  @apply flex\n    flex-col\n    overflow-hidden\n    px-3\n    py-3.5;\n\n  margin-inline-end: auto;\n\n  .heading,\n  .description {\n    @apply block\n      break-words\n      p-0;\n  }\n\n  .heading {\n    @apply mx-0 mt-0 mb-1 font-medium text-color-1;\n\n    &:only-child {\n      @apply mb-0;\n    }\n  }\n\n  .description {\n    @apply text-color-2;\n  }\n}\n\n.back-button {\n  @apply border-color-3\n  border-0\n  border-solid;\n  border-inline-end-width: theme(\"borderWidth.DEFAULT\");\n}\n\n.header-actions {\n  @apply flex\n  flex-row\n  flex-nowrap\n  items-stretch;\n}\n\n.header-actions--end {\n  margin-inline-start: theme(\"margin.auto\");\n}\n\n.content-wrapper {\n  @apply flex\n  flex-auto\n  flex-col\n  flex-nowrap\n  items-stretch\n  overflow-auto\n  h-full\n  focus-base;\n  padding: var(--calcite-panel-content-space, 0);\n  background: var(--calcite-panel-background-color, var(--calcite-color-background));\n}\n\n.content-wrapper:focus-visible {\n  @apply focus-inset;\n}\n\n.content-top,\n.content-bottom {\n  padding: var(--calcite-internal-panel-default-padding);\n}\n\n.header-content {\n  flex: 1 1 auto;\n  padding-block: var(--calcite-internal-panel-header-vertical-padding);\n  padding-inline: var(--calcite-internal-panel-default-padding);\n}\n\n.footer {\n  @apply flex mt-auto flex-row content-between justify-center items-center bg-foreground-1 text-n2-wrap;\n  border-block-start: 1px solid var(--calcite-color-border-3);\n  padding: var(--calcite-panel-footer-padding, var(--calcite-internal-panel-default-padding));\n}\n\n.footer-content {\n  @apply flex flex-row items-center justify-center flex-1;\n}\n\n.footer-actions {\n  @apply flex flex-row items-center justify-evenly flex-1;\n  gap: var(--calcite-internal-panel-default-padding);\n}\n\n.footer-start {\n  @apply flex flex-row items-center justify-start flex-1;\n  margin-inline-end: auto;\n  gap: var(--calcite-internal-panel-default-padding);\n}\n\n.footer-end {\n  @apply flex flex-row items-center justify-end flex-1;\n  margin-inline-start: auto;\n  gap: var(--calcite-internal-panel-default-padding);\n}\n\n.fab-container {\n  @apply sticky\n  bottom-0\n  my-0\n  mx-auto\n  block\n  p-2\n  z-sticky;\n  inset-inline: 0;\n  inline-size: fit-content;\n}\n\n@include base-component();\n","export const CSS = {\n  scrim: \"scrim\",\n  content: \"content\",\n};\n\nexport const BREAKPOINTS = {\n  s: 72, // Less than 72px.\n  // medium is assumed default.\n  l: 480, // Greater than or equal to 480px.\n};\n","import { Component, Element, h, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { slotChangeHasContent } from \"../../utils/dom\";\nimport { CSS, BREAKPOINTS } from \"./resources\";\nimport { ScrimMessages } from \"./assets/scrim/t9n\";\n\n/**\n * @slot - A slot for adding custom content, primarily loading information.\n */\n@Component({\n  tag: \"calcite-scrim\",\n  styleUrl: \"scrim.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Scrim implements LocalizedComponent, T9nComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ScrimMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ScrimMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteScrimElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.handleResize());\n\n  loaderEl: HTMLCalciteLoaderElement;\n\n  @State() loaderScale: Scale;\n\n  @State() defaultMessages: ScrimMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() hasContent = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.resizeObserver?.observe(this.el);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Method\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { hasContent, loading, messages } = this;\n\n    return (\n      <div class={CSS.scrim}>\n        {loading ? (\n          <calcite-loader\n            label={messages.loading}\n            ref={this.storeLoaderEl}\n            scale={this.loaderScale}\n          />\n        ) : null}\n        <div class={CSS.content} hidden={!hasContent}>\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </div>\n      </div>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.hasContent = slotChangeHasContent(event);\n  };\n\n  private storeLoaderEl = (el: HTMLCalciteLoaderElement): void => {\n    this.loaderEl = el;\n    this.handleResize();\n  };\n\n  private getScale(size: number): Scale {\n    if (size < BREAKPOINTS.s) {\n      return \"s\";\n    } else if (size >= BREAKPOINTS.l) {\n      return \"l\";\n    } else {\n      return \"m\";\n    }\n  }\n\n  private handleResize(): void {\n    const { loaderEl, el } = this;\n\n    if (!loaderEl) {\n      return;\n    }\n\n    this.loaderScale = this.getScale(Math.min(el.clientHeight, el.clientWidth) ?? 0);\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-scrim-background: Specifies the background color of the scrim.\n */\n:host {\n  --calcite-scrim-background: var(--calcite-color-transparent-scrim);\n}\n\n:host {\n  @apply absolute\n  inset-0\n  z-overlay\n  flex\n  h-full\n  w-full\n  flex-col\n  items-stretch;\n}\n\n@keyframes calcite-scrim-fade-in {\n  0% {\n    @apply bg-opacity-0;\n  }\n  100% {\n    @apply text-opacity-100;\n  }\n}\n\n.scrim {\n  @apply absolute\n  inset-0\n  flex\n  flex-col\n  content-center\n  items-center\n  justify-center\n  overflow-hidden;\n  animation: calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;\n  background-color: var(--calcite-scrim-background, var(--calcite-color-transparent-scrim));\n}\n\n.content {\n  @apply p-4;\n}\n\n@include base-component();\n"],"names":["getRoundRobinIndex","index","total","CSS","SLOTS","tooltip","trigger","ICONS","SUPPORTED_MENU_NAV_KEYS","ActionMenu","proxyCustomElement","HTMLElement","actionElements","guid","concat","menuId","this","menuButtonId","connectMenuButtonEl","open","label","menuButtonEl","slottedMenuButtonEl","defaultMenuButtonEl","disconnectMenuButtonEl","setTooltipReferenceElement","active","setAttribute","toAriaBoolean","id","text","addEventListener","menuButtonClick","menuButtonKeyDown","removeEventListener","setMenuButtonEl","event","actions","target","assignedElements","flatten","filter","el","matches","setDefaultMenuButtonEl","handleCalciteActionClick","setFocus","toggleOpen","updateTooltip","tooltips","tooltipEl","expanded","referenceElement","updateAction","action","activeMenuItemIndex","tabIndex","toggleAttribute","updateActions","forEach","handleDefaultSlotChange","reduce","previousValue","currentValue","push","Array","from","querySelectorAll","disabled","hidden","key","length","isActivationKey","preventDefault","click","handleActionNavigation","isValidKey","currentIndex","Math","max","toggleOpenEnd","value","arguments","undefined","_this","handlePopoverOpen","handlePopoverClose","connectedCallback","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","expandedHandler","openHandler","calciteActionMenuOpen","emit","activeMenuItemIndexHandler","componentFocusable","focusElement","renderMenuButton","appearance","scale","h","name","onSlotchange","class","icon","ref","textEnabled","renderMenuItems","placement","overlayPositioning","flipPlacements","activeAction","activeDescendantId","autoClose","focusTrapDisabled","offsetDistance","onCalcitePopoverClose","onCalcitePopoverOpen","pointerDisabled","onClick","role","render","Fragment","supportedKeys","find","k","IDS","actionBar","alerts","contentBottom","contentTop","headerActionsStart","headerActionsEnd","headerMenuActions","headerContent","fab","footer","footerEnd","footerStart","footerActions","Panel","resizeObserver","createObserver","resizeHandler","panelScrollEl","scrollHeight","offsetHeight","removeAttribute","setContainerRef","node","containerEl","panelKeyDownHandler","closable","defaultPrevented","handleUserClose","closed","calcitePanelClose","isClosed","close","async","_this$beforeClose","beforeClose","Promise","resolve","_error","requestAnimationFrame","collapse","collapsed","calcitePanelToggle","panelScrollHandler","calcitePanelScroll","handleHeaderActionsStartSlotChange","hasStartActions","slotChangeHasAssignedElement","handleHeaderActionsEndSlotChange","hasEndActions","handleHeaderMenuActionsSlotChange","hasMenuItems","handleActionBarSlotChange","actionBars","slotChangeGetAssignedElements","layout","hasActionBar","handleHeaderContentSlotChange","hasHeaderContent","handleFabSlotChange","hasFab","handleFooterActionsSlotChange","hasFooterActions","handleFooterEndSlotChange","hasFooterEndContent","handleFooterStartSlotChange","hasFooterStartContent","handleFooterSlotChange","hasFooterContent","contentBottomSlotChangeHandler","hasContentBottom","contentTopSlotChangeHandler","hasContentTop","setPanelScrollEl","_this$resizeObserver","_this$resizeObserver2","disconnect","observe","handleAlertsSlotChange","_slotChangeGetAssigne","map","nodeName","embedded","defaultEndMenuPlacement","toggleDialog","onMessagesChange","connectLocalized","connectMessages","setUpMessages","componentDidRender","updateHostInteraction","_this$resizeObserver3","disconnectLocalized","disconnectMessages","effectiveLocaleChange","updateMessages","effectiveLocale","focusFirstTabbable","scrollContentTo","options","_this$panelScrollEl","scrollTo","renderHeaderContent","heading","headingLevel","description","headingNode","Heading","level","descriptionNode","renderActionBar","renderHeaderSlottedContent","renderHeaderStartActions","renderHeaderActionsEnd","messages","collapseDirection","collapsible","expand","icons","reverse","collapseNode","title","closeNode","slotNode","showContainer","renderMenu","menuOpen","menuFlipPlacements","menuPlacement","slot","SLOTS$1","renderHeaderNode","headerContentNode","showHeaderContent","renderContentTop","renderFooterNode","showFooter","renderContent","onScroll","renderFab","renderContentBottom","loading","panelNode","Host","onKeyDown","InteractiveContainer","BREAKPOINTS","Scrim","handleResize","hasContent","slotChangeHasContent","storeLoaderEl","loaderEl","loaderScale","getScale","size","_Math$min","min","clientHeight","clientWidth"],"sourceRoot":""}