{"version":3,"file":"static/js/4289.1bc91769.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/lodash-es/_freeGlobal.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/lodash-es/_root.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/lodash-es/_Symbol.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/lodash-es/_getRawTag.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/lodash-es/_objectToString.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/lodash-es/_baseGetTag.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/lodash-es/isObjectLike.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/lodash-es/isSymbol.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/lodash-es/_baseTrim.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/lodash-es/isObject.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/lodash-es/toNumber.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/lodash-es/now.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/lodash-es/debounce.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/@floating-ui/utils/dist/floating-ui.utils.esm.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/@floating-ui/core/dist/floating-ui.core.esm.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/node_modules/@floating-ui/utils/dom/floating-ui.utils.dom.esm.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/node_modules/composed-offset-position/dist/composed-offset-position.esm.js","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/utils/floating-ui.ts","../node_modules/@arcgis/core/node_modules/@esri/calcite-components/dist/components/src/utils/openCloseComponent.ts"],"sourcesContent":["/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import { isContainingBlock } from '@floating-ui/utils/dom';\n\nfunction offsetParent(element) {\n    return offsetParentPolyfill(element);\n}\nfunction offsetTop(element) {\n    return offsetTopLeftPolyfill(element, 'offsetTop');\n}\nfunction offsetLeft(element) {\n    return offsetTopLeftPolyfill(element, 'offsetLeft');\n}\nfunction flatTreeParent(element) {\n    if (element.assignedSlot) {\n        return element.assignedSlot;\n    }\n    if (element.parentNode instanceof ShadowRoot) {\n        return element.parentNode.host;\n    }\n    return element.parentNode;\n}\nfunction ancestorTreeScopes(element) {\n    const scopes = new Set();\n    let currentScope = element.getRootNode();\n    while (currentScope) {\n        scopes.add(currentScope);\n        currentScope = currentScope.parentNode\n            ? currentScope.parentNode.getRootNode()\n            : null;\n    }\n    return scopes;\n}\nfunction offsetParentPolyfill(element) {\n    // Do an initial walk to check for display:none ancestors.\n    for (let ancestor = element; ancestor; ancestor = flatTreeParent(ancestor)) {\n        if (!(ancestor instanceof Element)) {\n            continue;\n        }\n        if (getComputedStyle(ancestor).display === 'none') {\n            return null;\n        }\n    }\n    for (let ancestor = flatTreeParent(element); ancestor; ancestor = flatTreeParent(ancestor)) {\n        if (!(ancestor instanceof Element)) {\n            continue;\n        }\n        const style = getComputedStyle(ancestor);\n        // Display:contents nodes aren't in the layout tree, so they should be skipped.\n        if (style.display === 'contents') {\n            continue;\n        }\n        if (style.position !== 'static' || isContainingBlock(style)) {\n            return ancestor;\n        }\n        if (ancestor.tagName === 'BODY') {\n            return ancestor;\n        }\n    }\n    return null;\n}\nfunction offsetTopLeftPolyfill(element, offsetTopOrLeft) {\n    let value = element[offsetTopOrLeft];\n    let nextOffsetParent = offsetParentPolyfill(element);\n    const scopes = ancestorTreeScopes(element);\n    while (nextOffsetParent && !scopes.has(nextOffsetParent.getRootNode())) {\n        value -= nextOffsetParent[offsetTopOrLeft];\n        nextOffsetParent = offsetParentPolyfill(nextOffsetParent);\n    }\n    return value;\n}\n\nexport { offsetLeft, offsetParent, offsetTop };\n","import {\n  arrow,\n  autoPlacement,\n  autoUpdate,\n  computePosition,\n  flip,\n  hide,\n  Middleware,\n  offset,\n  Placement,\n  platform,\n  shift,\n  Side,\n  Strategy,\n  VirtualElement,\n} from \"@floating-ui/dom\";\nimport { debounce, DebouncedFunc } from \"lodash-es\";\nimport { offsetParent } from \"composed-offset-position\";\nimport { Layout } from \"../components/interfaces\";\nimport { DEBOUNCE } from \"./resources\";\nimport { getElementDir } from \"./dom\";\nimport { isBrowser } from \"./browser\";\n\n(function setUpFloatingUiForShadowDomPositioning(): void {\n  if (isBrowser()) {\n    const originalGetOffsetParent = platform.getOffsetParent;\n    platform.getOffsetParent = (element: Element) => originalGetOffsetParent(element, offsetParent);\n  }\n})();\n\nfunction roundByDPR(value: number): number {\n  const dpr = window.devicePixelRatio || 1;\n  return Math.round(value * dpr) / dpr;\n}\n\n/**\n * Positions the floating element relative to the reference element.\n *\n * **Note:** exported for testing purposes only\n *\n * @param root0\n * @param root0.referenceEl\n * @param root0.floatingEl\n * @param root0.overlayPositioning\n * @param root0.placement\n * @param root0.flipDisabled\n * @param root0.flipPlacements\n * @param root0.offsetDistance\n * @param root0.offsetSkidding\n * @param root0.arrowEl\n * @param root0.type\n * @param component\n * @param root0.referenceEl.referenceEl\n * @param root0.referenceEl.floatingEl\n * @param root0.referenceEl.overlayPositioning\n * @param root0.referenceEl.placement\n * @param root0.referenceEl.flipDisabled\n * @param root0.referenceEl.flipPlacements\n * @param root0.referenceEl.offsetDistance\n * @param root0.referenceEl.offsetSkidding\n * @param root0.referenceEl.arrowEl\n * @param root0.referenceEl.type\n * @param component.referenceEl\n * @param component.floatingEl\n * @param component.overlayPositioning\n * @param component.placement\n * @param component.flipDisabled\n * @param component.flipPlacements\n * @param component.offsetDistance\n * @param component.offsetSkidding\n * @param component.arrowEl\n * @param component.type\n */\nexport const positionFloatingUI =\n  /* we export arrow function to allow us to spy on it during testing */\n  async (\n    component: FloatingUIComponent,\n    {\n      referenceEl,\n      floatingEl,\n      overlayPositioning = \"absolute\",\n      placement,\n      flipDisabled,\n      flipPlacements,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n      type,\n    }: {\n      referenceEl: ReferenceElement;\n      floatingEl: HTMLElement;\n      overlayPositioning: Strategy;\n      placement: LogicalPlacement;\n      flipDisabled?: boolean;\n      flipPlacements?: FlipPlacement[];\n      offsetDistance?: number;\n      offsetSkidding?: number;\n      arrowEl?: SVGSVGElement;\n      type: UIType;\n    },\n  ): Promise<void> => {\n    if (!referenceEl || !floatingEl) {\n      return null;\n    }\n\n    const isRTL = getElementDir(floatingEl) === \"rtl\";\n\n    const {\n      x,\n      y,\n      placement: effectivePlacement,\n      strategy: position,\n      middlewareData,\n    } = await computePosition(referenceEl, floatingEl, {\n      strategy: overlayPositioning,\n      placement:\n        placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\"\n          ? undefined\n          : getEffectivePlacement(placement, isRTL),\n      middleware: getMiddleware({\n        placement,\n        flipDisabled,\n        flipPlacements: flipPlacements?.map((placement) => getEffectivePlacement(placement, isRTL)),\n        offsetDistance,\n        offsetSkidding,\n        arrowEl,\n        type,\n      }),\n    });\n\n    if (arrowEl && middlewareData.arrow) {\n      const { x, y } = middlewareData.arrow;\n      const side = effectivePlacement.split(\"-\")[0] as Side;\n      const alignment = x != null ? \"left\" : \"top\";\n      const transform = ARROW_CSS_TRANSFORM[side];\n      const reset = { left: \"\", top: \"\", bottom: \"\", right: \"\" };\n\n      if (\"floatingLayout\" in component) {\n        component.floatingLayout = side === \"left\" || side === \"right\" ? \"horizontal\" : \"vertical\";\n      }\n\n      Object.assign(arrowEl.style, {\n        ...reset,\n        [alignment]: `${alignment == \"left\" ? x : y}px`,\n        [side]: \"100%\",\n        transform,\n      });\n    }\n\n    const referenceHidden = middlewareData.hide?.referenceHidden;\n    const visibility = referenceHidden ? \"hidden\" : null;\n    const pointerEvents = visibility ? \"none\" : null;\n\n    floatingEl.setAttribute(placementDataAttribute, effectivePlacement);\n\n    const { open } = component;\n\n    Object.assign(floatingEl.style, {\n      visibility,\n      pointerEvents,\n      position,\n      transform: open ? `translate(${roundByDPR(x)}px,${roundByDPR(y)}px)` : \"\",\n      top: 0,\n      left: 0,\n    });\n  };\n\n/**\n * Exported for testing purposes only\n */\nexport const placementDataAttribute = \"data-placement\";\n\nexport type ReferenceElement = VirtualElement | Element;\n\ntype UIType = \"menu\" | \"tooltip\" | \"popover\";\nexport type OverlayPositioning = Strategy;\n\n/**\n * Variation Placements change based on element direction.\n *\n * These variation placements will automatically flip \"left\"/\"right\" depending on LTR/RTL direction.\n *\n * Floating-ui has no plans to offer this functionality out of the box at this time.\n *\n * see: https://github.com/floating-ui/floating-ui/issues/1563 and https://github.com/floating-ui/floating-ui/discussions/1549\n */\n\nexport type EffectivePlacement = Placement;\n\nexport const placements = [\n  // auto placements\n  \"auto\",\n  \"auto-start\",\n  \"auto-end\",\n  // placements\n  \"top\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right\",\n  \"right-start\",\n  \"right-end\",\n  \"left\",\n  \"left-start\",\n  \"left-end\",\n  // variation placements\n  \"leading-start\",\n  \"leading\",\n  \"leading-end\",\n  \"trailing-end\",\n  \"trailing\",\n  \"trailing-start\",\n] as const;\n\nexport type LogicalPlacement = (typeof placements)[number];\n\nexport const effectivePlacements: EffectivePlacement[] = [\n  \"top\",\n  \"bottom\",\n  \"right\",\n  \"left\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right-start\",\n  \"right-end\",\n  \"left-start\",\n  \"left-end\",\n];\n\nexport const menuPlacements: MenuPlacement[] = [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"];\n\nexport const menuEffectivePlacements: EffectivePlacement[] = [\n  \"top-start\",\n  \"top\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom\",\n  \"bottom-end\",\n];\n\nexport type FlipPlacement = Exclude<LogicalPlacement, \"auto\" | \"auto-start\" | \"auto-end\">;\n\nexport const flipPlacements: FlipPlacement[] = [\n  \"top\",\n  \"bottom\",\n  \"right\",\n  \"left\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right-start\",\n  \"right-end\",\n  \"left-start\",\n  \"left-end\",\n  \"leading\",\n  \"trailing\",\n  \"leading-start\",\n  \"leading-end\",\n  \"trailing-start\",\n  \"trailing-end\",\n];\n\nexport type MenuPlacement = Extract<\n  LogicalPlacement,\n  \"top-start\" | \"top\" | \"top-end\" | \"bottom-start\" | \"bottom\" | \"bottom-end\"\n>;\n\nexport const defaultMenuPlacement: MenuPlacement = \"bottom-start\";\nexport const defaultEndMenuPlacement: MenuPlacement = \"bottom-end\";\n\nexport interface FloatingUIComponent {\n  /**\n   * Whether the component is opened.\n   */\n  open: boolean;\n\n  /**\n   * Describes the type of positioning to use for the overlaid content. If your element is in a fixed container, use the 'fixed' value.\n   */\n  overlayPositioning: OverlayPositioning;\n\n  /**\n   * Determines where the component will be positioned relative to the referenceElement.\n   *\n   * Possible values: \"auto\", \"auto-start\", \"auto-end\", \"top\", \"right\", \"bottom\", \"left\", \"top-start\", \"top-end\", \"right-start\", \"right-end\", \"bottom-start\", \"bottom-end\", \"left-start\", \"left-end\", \"leading-start\", \"leading\", \"leading-end\", \"trailing-end\", \"trailing\",  or \"trailing-start\".\n   *\n   */\n  placement: LogicalPlacement;\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed – (internal) when true, it will reposition the component after a delay. the default is false. This is useful for components that have multiple watched properties that schedule repositioning.\n   */\n  reposition: (delayed?: boolean) => Promise<void>;\n\n  /**\n   * Used to store the effective floating layout for components that use arrows.\n   *\n   * This is an internal property and should:\n   *\n   * - only be used for components that support arrows\n   * - use the `@State` decorator\n   * - be initialized to \"vertical\"\n   *\n   * Possible values: \"vertical\" or \"horizontal\".\n   *\n   * See [FloatingArrow](https://github.com/Esri/calcite-design-system/blob/dev/src/components/functional/FloatingArrow.tsx)\n   */\n  floatingLayout?: FloatingLayout;\n}\n\nexport type FloatingLayout = Extract<Layout, \"vertical\" | \"horizontal\">;\n\nexport const FloatingCSS = {\n  animation: \"calcite-floating-ui-anim\",\n  animationActive: \"calcite-floating-ui-anim--active\",\n  arrow: \"calcite-floating-ui-arrow\",\n  arrowStroke: \"calcite-floating-ui-arrow__stroke\",\n};\n\nfunction getMiddleware({\n  placement,\n  flipDisabled,\n  flipPlacements,\n  offsetDistance,\n  offsetSkidding,\n  arrowEl,\n  type,\n}: {\n  placement: LogicalPlacement;\n  flipDisabled?: boolean;\n  flipPlacements?: EffectivePlacement[];\n  offsetDistance?: number;\n  offsetSkidding?: number;\n  arrowEl?: SVGSVGElement;\n  type: UIType;\n}): Middleware[] {\n  const defaultMiddleware = [shift(), hide()];\n\n  if (type === \"menu\") {\n    return [\n      ...defaultMiddleware,\n      flip({\n        fallbackPlacements: flipPlacements || [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"],\n      }),\n    ];\n  }\n\n  if (type === \"popover\" || type === \"tooltip\") {\n    const middleware: Middleware[] = [\n      ...defaultMiddleware,\n      offset({\n        mainAxis: typeof offsetDistance === \"number\" ? offsetDistance : 0,\n        crossAxis: typeof offsetSkidding === \"number\" ? offsetSkidding : 0,\n      }),\n    ];\n\n    if (placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\") {\n      middleware.push(\n        autoPlacement({ alignment: placement === \"auto-start\" ? \"start\" : placement === \"auto-end\" ? \"end\" : null }),\n      );\n    } else if (!flipDisabled) {\n      middleware.push(flip(flipPlacements ? { fallbackPlacements: flipPlacements } : {}));\n    }\n\n    if (arrowEl) {\n      middleware.push(\n        arrow({\n          element: arrowEl,\n        }),\n      );\n    }\n\n    return middleware;\n  }\n\n  return [];\n}\n\nexport function filterValidFlipPlacements(placements: string[], el: HTMLElement): EffectivePlacement[] {\n  const filteredPlacements = placements.filter((placement: EffectivePlacement) =>\n    flipPlacements.includes(placement),\n  ) as EffectivePlacement[];\n\n  if (filteredPlacements.length !== placements.length) {\n    console.warn(\n      `${el.tagName}: Invalid value found in: flipPlacements. Try any of these: ${flipPlacements\n        .map((placement) => `\"${placement}\"`)\n        .join(\", \")\n        .trim()}`,\n      { el },\n    );\n  }\n\n  return filteredPlacements;\n}\n\nexport function getEffectivePlacement(placement: LogicalPlacement, isRTL = false): EffectivePlacement {\n  const placements = [\"left\", \"right\"];\n\n  if (isRTL) {\n    placements.reverse();\n  }\n\n  return placement.replace(/leading/gi, placements[0]).replace(/trailing/gi, placements[1]) as EffectivePlacement;\n}\n\n/**\n * Convenience function to manage `reposition` calls for FloatingUIComponents that use `positionFloatingUI.\n *\n * Note: this is not needed for components that use `calcite-popover`.\n *\n * @param component - A floating-ui component.\n * @param options - Reposition parameters.\n * @param options.referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param options.floatingEl - The `floatingElement` containing the floating ui.\n * @param options.overlayPositioning - type of positioning to use for the overlaid content.\n * @param options.placement - Determines where the component will be positioned relative to the `referenceElement`.\n * @param options.flipDisabled - Prevents flipping the component's placement when overlapping its `referenceElement`.\n * @param options.flipPlacements - Defines the available placements that can be used when a flip occurs.\n * @param options.offsetDistance - Offsets the position of the popover away from the `referenceElement`.\n * @param options.offsetSkidding - Offsets the position of the component along the `referenceElement`.\n * @param options.arrowEl - A customizable arrow element.\n * @param options.type - The type of floating UI.\n * @param delayed - Reposition the component after a delay.\n * @returns {Promise<void>}\n */\nexport async function reposition(\n  component: FloatingUIComponent,\n  options: Parameters<typeof positionFloatingUI>[1],\n  delayed = false,\n): Promise<void> {\n  if (!component.open || !options.floatingEl || !options.referenceEl) {\n    return;\n  }\n\n  const trackedState = autoUpdatingComponentMap.get(component);\n\n  if (!trackedState) {\n    return runAutoUpdate(component, options.referenceEl, options.floatingEl);\n  }\n\n  const positionFunction = delayed ? getDebouncedReposition(component) : positionFloatingUI;\n\n  await positionFunction(component, options);\n}\n\nfunction getDebouncedReposition(component: FloatingUIComponent): DebouncedFunc<typeof positionFloatingUI> {\n  let debounced = componentToDebouncedRepositionMap.get(component);\n\n  if (debounced) {\n    return debounced;\n  }\n\n  debounced = debounce(positionFloatingUI, DEBOUNCE.reposition, {\n    leading: true,\n    maxWait: DEBOUNCE.reposition,\n  });\n\n  componentToDebouncedRepositionMap.set(component, debounced);\n\n  return debounced;\n}\n\nconst ARROW_CSS_TRANSFORM = {\n  top: \"\",\n  left: \"rotate(-90deg)\",\n  bottom: \"rotate(180deg)\",\n  right: \"rotate(90deg)\",\n};\n\ntype PendingFloatingUIState = {\n  state: \"pending\";\n};\n\ntype ActiveFloatingUIState = {\n  state: \"active\";\n  cleanUp: () => void;\n};\n\ntype TrackedFloatingUIState = PendingFloatingUIState | ActiveFloatingUIState;\n\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nexport const autoUpdatingComponentMap = new WeakMap<FloatingUIComponent, TrackedFloatingUIState>();\n\nconst componentToDebouncedRepositionMap = new WeakMap<FloatingUIComponent, DebouncedFunc<typeof positionFloatingUI>>();\n\nasync function runAutoUpdate(\n  component: FloatingUIComponent,\n  referenceEl: ReferenceElement,\n  floatingEl: HTMLElement,\n): Promise<void> {\n  if (!floatingEl.isConnected) {\n    return;\n  }\n\n  const effectiveAutoUpdate = isBrowser()\n    ? autoUpdate\n    : (_refEl: HTMLElement, _floatingEl: HTMLElement, updateCallback: () => void): (() => void) => {\n        updateCallback();\n        return () => {\n          /* noop */\n        };\n      };\n\n  // we set initial state here to make it available for `reposition` calls\n  autoUpdatingComponentMap.set(component, { state: \"pending\" });\n\n  let repositionPromise: Promise<void>;\n\n  const cleanUp = effectiveAutoUpdate(\n    referenceEl,\n    floatingEl,\n    // callback is invoked immediately\n    () => {\n      const promise = component.reposition();\n\n      if (!repositionPromise) {\n        repositionPromise = promise;\n      }\n    },\n  );\n\n  autoUpdatingComponentMap.set(component, { state: \"active\", cleanUp });\n\n  return repositionPromise;\n}\n\n/**\n * Helper to set up floating element interactions on connectedCallback.\n *\n * @param component - A floating-ui component.\n * @param referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param floatingEl - The `floatingElement` containing the floating ui.\n */\nexport async function connectFloatingUI(\n  component: FloatingUIComponent,\n  referenceEl: ReferenceElement,\n  floatingEl: HTMLElement,\n): Promise<void> {\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n\n  disconnectFloatingUI(component, referenceEl, floatingEl);\n\n  Object.assign(floatingEl.style, {\n    visibility: \"hidden\",\n    pointerEvents: \"none\",\n\n    // initial positioning based on https://floating-ui.com/docs/computePosition#initial-layout\n    position: component.overlayPositioning,\n  });\n\n  if (!component.open) {\n    return;\n  }\n\n  return runAutoUpdate(component, referenceEl, floatingEl);\n}\n\n/**\n * Helper to tear down floating element interactions on disconnectedCallback.\n *\n * @param component - A floating-ui component.\n * @param referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param floatingEl - The `floatingElement` containing the floating ui.\n */\nexport function disconnectFloatingUI(\n  component: FloatingUIComponent,\n  referenceEl: ReferenceElement,\n  floatingEl: HTMLElement,\n): void {\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n\n  const trackedState = autoUpdatingComponentMap.get(component);\n\n  if (trackedState?.state === \"active\") {\n    trackedState.cleanUp();\n  }\n\n  autoUpdatingComponentMap.delete(component);\n\n  componentToDebouncedRepositionMap.get(component)?.cancel();\n  componentToDebouncedRepositionMap.delete(component);\n}\n\nconst visiblePointerSize = 4;\n\n/**\n * Default offset the position of the floating element away from the reference element.\n *\n * @default 6\n */\nexport const defaultOffsetDistance = Math.ceil(Math.hypot(visiblePointerSize, visiblePointerSize));\n","import { readTask } from \"@stencil/core\";\nimport { whenTransitionDone } from \"./dom\";\n\n/**\n * Exported for testing purposes only\n */\nexport const internalReadTask = readTask;\n\n/**\n * Defines interface for components with open/close public emitter.\n * All implementations of this interface must handle the following events: `beforeOpen`, `open`, `beforeClose`, `close`.\n */\nexport interface OpenCloseComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * When true, the component opens.\n   */\n  open?: boolean;\n\n  /**\n   * When true, the component is open.\n   */\n  opened?: boolean;\n\n  /**\n   *  Specifies the name of transitionProp.\n   */\n  transitionProp?: string;\n\n  /**\n   * Specifies property on which active transition is watched for.\n   */\n  openTransitionProp: string;\n\n  /**\n   * Specifies element that the transition is allowed to emit on.\n   */\n  transitionEl: HTMLElement;\n\n  /**\n   * Defines method for `beforeOpen` event handler.\n   */\n  onBeforeOpen: () => void;\n\n  /**\n   * Defines method for `open` event handler:\n   */\n  onOpen: () => void;\n\n  /**\n   * Defines method for `beforeClose` event handler:\n   */\n  onBeforeClose: () => void;\n\n  /**\n   * Defines method for `close` event handler:\n   */\n  onClose: () => void;\n}\n\nfunction isOpen(component: OpenCloseComponent): boolean {\n  return \"opened\" in component ? component.opened : component.open;\n}\n\n/**\n * Helper to determine globally set transition duration on the given openTransitionProp, which is imported and set in the @Watch(\"open\").\n * Used to emit (before)open/close events both for when the opacity transition is present and when there is none (transition-duration is set to 0).\n *\n * @example\n * import { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\n *\n * async componentWillLoad() {\n * // When component initially renders, if `open` was set we need to trigger on load as watcher doesn't fire.\n * if (this.open) {\n *    onToggleOpenCloseComponent(this);\n * }\n * @Watch(\"open\")\n * async toggleModal(value: boolean): Promise<void> {\n *    onToggleOpenCloseComponent(this);\n * }\n *\n * @param component - OpenCloseComponent uses `open` prop to emit (before)open/close.\n */\nexport function onToggleOpenCloseComponent(component: OpenCloseComponent): void {\n  internalReadTask((): void => {\n    if (!component.transitionEl) {\n      return;\n    }\n\n    whenTransitionDone(\n      component.transitionEl,\n      component.openTransitionProp,\n      () => {\n        if (isOpen(component)) {\n          component.onBeforeOpen();\n        } else {\n          component.onBeforeClose();\n        }\n      },\n      () => {\n        if (isOpen(component)) {\n          component.onOpen();\n        } else {\n          component.onClose();\n        }\n      },\n    );\n  });\n}\n"],"names":["freeGlobal$1","global","Object","freeSelf","self","root$1","Function","Symbol$1","Symbol","objectProto$1","prototype","hasOwnProperty","nativeObjectToString$1","toString","symToStringTag$1","toStringTag","undefined","nativeObjectToString","nullTag","undefinedTag","symToStringTag","baseGetTag","value","isOwn","call","tag","unmasked","e","result","getRawTag","objectToString","isObjectLike","symbolTag","isSymbol","reWhitespace","reTrimStart","baseTrim","string","slice","index","length","test","charAt","trimmedEndIndex","replace","isObject","type","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","now$1","Date","now","FUNC_ERROR_TEXT","nativeMax","Math","max","nativeMin","min","debounce","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","clearTimeout","cancel","flush","sides","alignments","placements","reduce","acc","side","concat","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","mainAlignmentSide","reference","floating","getOppositePlacement","getOppositeAlignmentPlacement","getPaddingObject","padding","_objectSpread","expandPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","state","_await$platform$isEle","platform","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getSideOffsets","overflow","isAnySideFullyClipped","some","hasWindow","window","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle$1","isTableElement","isTopLayer","selector","matches","isContainingBlock","elementOrCss","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","filter","willChange","contain","CSS","supports","isLastTraversableNode","getComputedStyle","getNodeScroll","scrollLeft","scrollTop","scrollX","scrollY","getParentNode","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","parent","getPrototypeOf","getFrameElement","visualViewport","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","isStaticPositioned","getTrueOffsetParent","polyfill","svgOffsetParent","currentNode","getContainingBlock","topLayer","clippingAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","_c","firstClippingAncestor","clippingRect","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","Array","from","isRTL","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","disconnect","refresh","skip","threshold","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","offset","name","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","arrow","alignmentOffset","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","_evaluate","allowedPlacements","autoAlignment","detectOverflowOptions","_objectWithoutProperties","_excluded","placements$1","getPlacementList","currentIndex","currentPlacement","alignmentSides","reset","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","map","d","sort","a","b","resetPlacement","every","shift","_evaluate4","checkMainAxis","checkCrossAxis","limiter","_excluded4","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","flip","_middlewareData$flip","initialPlacement","_evaluate2","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","_excluded2","isBasePlacement","oppositePlacement","getExpandedPlacements","push","isStart","lr","rl","tb","bt","getSideList","getOppositeAxisPlacements","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","hide","_evaluate3","_excluded3","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","computePosition","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","i","nextX","nextY","computePosition$1","flatTreeParent","style","tagName","offsetParentPolyfill","roundByDPR","dpr","devicePixelRatio","isBrowser","originalGetOffsetParent","positionFloatingUI","component","_ref2","_middlewareData$hide","floatingEl","overlayPositioning","flipDisabled","flipPlacements","offsetDistance","offsetSkidding","arrowEl","getElementDir","effectivePlacement","getEffectivePlacement","getMiddleware","ARROW_CSS_TRANSFORM","floatingLayout","assign","visibility","pointerEvents","setAttribute","placementDataAttribute","open","defaultMenuPlacement","defaultEndMenuPlacement","FloatingCSS","animation","animationActive","arrowStroke","_ref3","defaultMiddleware","filterValidFlipPlacements","filteredPlacements","console","warn","join","trim","reverse","reposition","delayed","autoUpdatingComponentMap","runAutoUpdate","positionFunction","componentToDebouncedRepositionMap","DEBOUNCE","getDebouncedReposition","WeakMap","isConnected","effectiveAutoUpdate","_refEl","_floatingEl","updateCallback","repositionPromise","cleanUp","promise","connectFloatingUI","disconnectFloatingUI","_componentToDebounced","trackedState","delete","defaultOffsetDistance","ceil","hypot","internalReadTask","readTask","isOpen","opened","onToggleOpenCloseComponent","transitionEl","whenTransitionDone","openTransitionProp","onBeforeOpen","onBeforeClose","onOpen","onClose"],"sourceRoot":""}