"use strict";(self.webpackChunksc_envimonitor=self.webpackChunksc_envimonitor||[]).push([[5972],{25889:(e,t,s)=>{s.d(t,{AC:()=>c,Fz:()=>p,Q_:()=>g,_C:()=>u,fB:()=>d,i1:()=>h,jO:()=>f,kE:()=>l,ks:()=>i,s8:()=>m,sc:()=>a});var o=s(10064);const n="upload-assets",r=()=>new Error;class a extends o.Z{constructor(){super("".concat(n,":unsupported"),"Layer does not support asset uploads.",r())}}class i extends o.Z{constructor(){super("".concat(n,":no-glb-support"),"Layer does not support glb.",r())}}class l extends o.Z{constructor(){super("".concat(n,":no-supported-source"),"No supported external source found",r())}}class c extends o.Z{constructor(){super("".concat(n,":not-base-64"),"Expected gltf data in base64 format after conversion.",r())}}class u extends o.Z{constructor(){super("".concat(n,":unable-to-prepare-options"),"Unable to prepare uploadAsset request options.",r())}}class p extends o.Z{constructor(e,t){super("".concat(n,":bad-response"),"Bad response. Uploaded ".concat(e," items and received ").concat(t," results."),r())}}class d extends o.Z{constructor(e,t){var s,o;super("".concat(n,"-layer:upload-failed"),"Failed to upload mesh file ".concat(e,". Error code: ").concat(null!==(s=null===t||void 0===t?void 0:t.code)&&void 0!==s?s:"-1",". Error message: ").concat(null!==(o=null===t||void 0===t?void 0:t.messages)&&void 0!==o?o:"unknown"),r())}}class f extends o.Z{constructor(e){super("".concat(n,"-layer:unsupported-format"),"The service allowed us to upload an asset of FormatID ".concat(e,", but it does not list it in its supported formats."),r())}}class m extends o.Z{constructor(){super("".concat(n,":convert3D-failed"),"convert3D failed.")}}class g extends o.Z{constructor(){super("invalid-input:no-model","No supported model found")}}class h extends o.Z{constructor(){super("invalid-input:multiple-models","Multiple supported models found")}}},15972:(e,t,s)=>{s.d(t,{uploadAssets:()=>N});var o=s(9236),n=(s(59486),s(76200)),r=s(93169),a=s(32718),i=s(66978),l=s(38499),c=s(35995),u=s(71907),p=s(17493),d=s(25889);const f={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};var m=s(25899),g=s(42537),h=s(77427);function v(e){return new w(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},arguments.length>2?arguments[2]:void 0)}class w{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},s=arguments.length>2?arguments[2]:void 0;if(this.onProgress=t,this.taskName=s,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,"number"==typeof e){this._weights={};for(let t=0;t<e;t++){const s=t,o=1/e;this._weights[s]=o,this._progressMap.set(s,0)}}else this._weights=e;this.emitProgress()}emitProgress(){let e=0;for(const[o,n]of this._progressMap.entries())e+=n*this._weights[o];if(1===e&&(0,r.Z)("enable-feature:esri-3dofl-upload-timings")){var t;const e=Math.round(performance.now()-(null!==(t=this._startTime)&&void 0!==t?t:0))/1e3;console.log("".concat(this.taskName," done in ").concat(e," sec"));for(const[t,o]of this._timingsMap){var s;const n=Math.round(o.end-o.start)/1e3,r=Math.round(n/e*100);console.log(null!==(s=this.taskName)&&void 0!==s?s:"Task",{stepKey:t,stepTime:n,relativeTime:r})}}this.onProgress(e)}setProgress(e,t){if(this._progressMap.set(e,t),(0,r.Z)("enable-feature:esri-3dofl-upload-timings")){var s;const o=performance.now();null!==(s=this._startTime)&&void 0!==s||(this._startTime=o);const n=(0,h.s1)(this._timingsMap,e,(()=>({start:o,end:0})));1===t&&(n.end=o)}this.emitProgress()}simulate(e,t){return y((t=>this.setProgress(e,t)),t)}makeOnProgress(e){return t=>this.setProgress(e,t)}}function y(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e=>{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:k;const s=performance.now();e(0);const o=setInterval((()=>{const o=performance.now()-s,n=1-Math.exp(-o/t);e(n)}),T);return(0,g.kB)((()=>{clearInterval(o),e(1)}))}function Z(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:_;return(0,l.up)((0,l._H)(e*P/t))}const _=10,b=10,P=8e-6,T=(0,l.HA)(50),k=(0,l.HA)(1e3),A=1e6,x=20*A,E=2e9,F=3;async function j(e,t,s){let{data:o,name:r,description:a}=e,l=null;try{const e=(0,c.v_)(t,"uploads"),p=(0,c.v_)(e,"info"),{data:d}=await(0,n.Z)(p,{query:{f:"json"},responseType:"json"});(0,i.k_)(s);const f=(0,m.M8)(t),g=d.maxUploadFileSize*A,h=f?E:g,w=f?Math.min(x,g):x;if(o.size>h)throw new Error("Data too large");const y=(0,c.v_)(e,"register"),{data:_}=await(0,n.Z)(y,{query:{f:"json",itemName:(u=r,u.replaceAll("/","_").replaceAll("\\","_")),description:a},responseType:"json",method:"post"});if((0,i.k_)(s),!_.success)throw new Error("Registration failed");const{itemID:b}=_.item;l=(0,c.v_)(e,b);const P=(0,c.v_)(l,"uploadPart"),T=Math.ceil(o.size/w),k=new Array;for(let t=0;t<T;++t)k.push(o.slice(t*w,Math.min((t+1)*w,o.size)));const j=k.slice().reverse(),C=new Array,D=v(T,null===s||void 0===s?void 0:s.onProgress,"uploadItem"),M=async()=>{for(;0!==j.length;){const e=k.length-j.length,t=j.pop(),o=new FormData,r=D.simulate(e,Z(t.size));try{o.append("f","json"),o.append("file",t),o.append("partId","".concat(e));const{data:r}=await(0,n.Z)(P,{timeout:0,body:o,responseType:"json",method:"post"});if((0,i.k_)(s),!r.success)throw new Error("Part upload failed")}finally{r.remove()}}};for(let t=0;t<F&&0!==j.length;++t)C.push(M());await Promise.all(C);const S=(0,c.v_)(l,"commit"),{data:N}=await(0,n.Z)(S,{query:{f:"json",parts:k.map(((e,t)=>t)).join(",")},responseType:"json",method:"post"});if((0,i.k_)(s),!N.success)throw new Error("Commit failed");return N.item}catch(p){if(null!=l){const e=(0,c.v_)(l,"delete");await(0,n.Z)(e,{query:{f:"json"},responseType:"json",method:"post"})}throw p}var u}var C=s(18277),D=s(5559),M=s(25219),S=s(78952);async function N(e,t,s){var n;const a=e.length;if(!a)return null!==s&&void 0!==s&&null!==(n=s.onProgress)&&void 0!==n&&n.call(s,1),[];const m=v(a,null===s||void 0===s?void 0:s.onProgress,"uploadAssets");return Promise.all(e.map(((e,n)=>async function(e,t,s){var n;let{layer:a,ongoingUploads:m}=t;const g=m.get(e);if(g)return g;if(!function(e){return!!e.infoFor3D&&!!e.url}(a))throw new d.sc;if(function(e,t){const{parsedUrl:s}=t;return null!=s&&e.metadata.externalSources.some((e=>(0,p.JG)(e,s)))}(e,a))return null!==s&&void 0!==s&&null!==(n=s.onProgress)&&void 0!==n&&n.call(s,1),e;const h=async function(e,t,s){const{metadata:n}=e,{displaySource:a}=n,m=I(null===a||void 0===a?void 0:a.source,t,{checkForConversionRequired:(0,r.Z)("enable-feature:georeferenced-uploads")}),g=null!=m?async function(e,t,s){return{source:await O(e,t,s),original:!0,unitConversionDisabled:!0}}(m,t,s):n.externalSources.length>0?async function(e,t,s){const o=z(t),{externalSources:n}=e.metadata,a=function(e,t){for(const s of e){const e=I(s.source,t);if(e)return e}return null}(n,t);if(!a)throw new d.kE;const i=v(f.uploadConvertibleSource,null===s||void 0===s?void 0:s.onProgress,"uploadConvertibleSource"),u=await O(a,t,{onProgress:i.makeOnProgress("uploadEditSource")});e.addExternalSources([{source:u,original:!0}]);const m=a.reduce(((e,t)=>{let{asset:s}=t;return s instanceof File?e+s.size:e}),0),g=i.simulate("serviceAssetsToGlb",function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b;return(0,l.up)((0,l._H)(e*P/t))}(m));try{var h;const{source:n,transform:a,origin:i}=await async function(e,t,s){const o=e.map((e=>{let{assetName:t,parts:s}=e;return{assetName:t,assetHash:s[0].partHash}}));let n;try{var i;const e=(0,c.v_)(t.parsedUrl.path,"convert3D"),r=null===(i=t.capabilities)||void 0===i?void 0:i.operations.supportsAsyncConvert3D;n=(await(r?X:L)(e,{query:{f:"json",assets:JSON.stringify(o),transportType:"esriTransportTypeUrl",targetFormat:s,async:r},responseType:"json",timeout:0})).data}catch(a){throw new d.s8}return function(e,t){const s={source:t.assets.map((t=>{const s=(0,C.S0)(t.contentType,e.infoFor3D.supportedFormats);if(!s)throw new d.jO(s);return new p.CP(t.assetName,t.contentType,[new p.LL(t.assetURL,t.assetHash)])})),origin:void 0,transform:void 0};if((0,r.Z)("enable-feature:georeferenced-uploads")&&t.transform){if(s.transform=(0,M.E)(t.transform),t.spatialReference){const e=S.Z.fromJSON(t.spatialReference);s.origin=(0,M.A)(t.transform,e)}}else s.transform=(0,D.c)(e.spatialReference);return s}(t,n)}(u,t,o);return e.transform=a,i&&(e.metadata.georeferenced=!0,null!==s&&void 0!==s&&s.useAssetOrigin&&(e.vertexSpace.origin=[i.x,i.y,null!==(h=i.z)&&void 0!==h?h:0],e.spatialReference=i.spatialReference)),{source:n,unitConversionDisabled:!0}}finally{g.remove()}}(e,t,s):async function(e,t,s){const n=v(f.uploadLocalMesh,null===s||void 0===s?void 0:s.onProgress,"uploadLocalMesh"),r=async function(e,t,s){const o=z(t),n=await e.load(s),r=await n.toBinaryGLTF({origin:n.origin,signal:null===s||void 0===s?void 0:s.signal,ignoreLocalTransform:!0,unitConversionDisabled:!0});return(0,i.k_)(s),{blob:new Blob([r],{type:"model/gltf-binary"}),assetName:"".concat((0,u.zS)(),".glb"),assetType:o}}(e,t,(0,o.Z)((0,o.Z)({},s),{},{onProgress:n.makeOnProgress("meshToAssetBlob")}));return{source:await B([r],t,(0,o.Z)((0,o.Z)({},s),{},{onProgress:n.makeOnProgress("uploadAssetBlobs")})),extent:e.extent.clone(),original:!0}}(e,t,s),h=await g;return(0,i.k_)(s),e.addExternalSources([h]),e}(e,a,s);m.set(e,h);try{await h}finally{m.delete(e)}return e}(e,t,(0,o.Z)((0,o.Z)({},s),{},{onProgress:m.makeOnProgress(n)})))))}function I(e,t){let{infoFor3D:s}=t,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!e)return null;const{supportedFormats:n,editFormats:r}=s,a=(0,p.zE)(e),i=new Array,l=(0,C.Wr)(s),c=(0,C.sg)(s);let u=!1;for(const p of a){const e=R(p,n);if(!e)return null;const{assetType:t}=e;if(o.checkForConversionRequired&&(t===l||t===c))return null;r.includes(t)&&(u=!0),i.push(e)}return u?i:null}function R(e,t){const s=(0,p.vj)(e,t);return s?{asset:e,assetType:s}:null}async function O(e,t,s){return B(e.map((e=>async function(e,t){const{asset:s,assetType:o}=e;if(s instanceof File)return{blob:s,assetName:s.name,assetType:o};const n=await s.toBlob(t);return(0,i.k_)(t),{blob:n,assetName:s.assetName,assetType:o}}(e,s))),t,s)}async function B(e,t,s){const n=v(f.uploadAssetBlobs,null===s||void 0===s?void 0:s.onProgress,"uploadAssetBlobs"),r=await function(e,t,s){const n=v(e.length,null===s||void 0===s?void 0:s.onProgress,"prepareAssetItems");return Promise.all(e.map((async(e,r)=>{const l=async function(e,t,s){const{blob:o,assetType:n,assetName:r}=e;let l=null;try{const e=await j({data:o,name:r},t.url,s);(0,i.k_)(s),l={assetType:n,assetUploadId:e.itemID}}catch(k){(0,i.r9)(k),a.Z.getLogger("esri.layers.graphics.sources.support.uploadAssets").warnOnce("Service ".concat(t.url," does not support the REST Uploads API."))}if(!l){const e=await(0,c.IR)(o);if((0,i.k_)(s),!e.isBase64)throw new d.AC;l={assetType:n,assetData:e.data}}if(!l)throw new d._C;return{item:l,assetName:r}}(await e,t,(0,o.Z)((0,o.Z)({},s),{},{onProgress:n.makeOnProgress(r)}));return(0,i.k_)(s),l})))}(e,t,(0,o.Z)((0,o.Z)({},s),{},{onProgress:n.makeOnProgress("prepareAssetItems")}));(0,i.k_)(s);const l=r.map((e=>{let{item:t}=e;return t})),{uploadResults:u}=await U(l,t,(0,o.Z)((0,o.Z)({},s),{},{onProgress:n.makeOnProgress("uploadAssetItems")}));return(0,i.k_)(s),e.map(((e,s)=>function(e,t,s){const{success:o}=t;if(!o){const{error:s}=t;throw new d.fB(e.assetName,s)}const{assetHash:n}=t,{assetName:r,item:{assetType:a}}=e,{infoFor3D:{supportedFormats:i}}=s,l=(0,C.d1)(a,i);if(!l)throw new d.jO(a);return new p.CP(r,l,[new p.LL("".concat(s.parsedUrl.path,"/assets/").concat(n),n)])}(r[s],u[s],t)))}async function U(e,t,s){const o=y(null===s||void 0===s?void 0:s.onProgress);try{const o=await(0,n.Z)((0,c.v_)(t.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(e)},method:"post",responseType:"json"});if((0,i.k_)(s),o.data.uploadResults.length!==e.length)throw new d.Fz(e.length,o.data.uploadResults.length);return o.data}finally{o.remove()}}function L(e,t){return(0,n.Z)(e,t)}async function X(e,t){const s=(await(0,n.Z)(e,t)).data.statusUrl;for(;;){const e=(await(0,n.Z)(s,{query:{f:"json"},responseType:"json"})).data;switch(e.status){case"Completed":return(0,n.Z)(e.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(e.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await(0,i.e4)(Y)}}function z(e){let{infoFor3D:t}=e;const s=(0,C.X4)(t);if(!s)throw new d.ks;return s}const Y=(0,l.HA)(1e3)},5559:(e,t,s)=>{s.d(t,{c:()=>r});var o=s(68860),n=s(76046);function r(e){const t=1/(0,o.c9)(e,1);return 1!==t?new n.Z({scale:[t,t,t]}):void 0}},25219:(e,t,s)=>{s.d(t,{A:()=>r,E:()=>a});s(59486);var o=s(76046),n=s(848);function r(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i;return new n.Z({x:e[s.originX],y:e[s.originY],z:e[s.originZ],spatialReference:t})}function a(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i;return new o.Z({translation:[e[t.translationX],-e[t.translationZ],e[t.translationY]],rotationAxis:[e[t.rotationX],-e[t.rotationZ],e[t.rotationY]],rotationAngle:e[t.rotationDeg],scale:[e[t.scaleX],e[t.scaleZ],e[t.scaleY]]})}const i={originX:"originX",originY:"originY",originZ:"originZ",translationX:"translationX",translationY:"translationY",translationZ:"translationZ",scaleX:"scaleX",scaleY:"scaleY",scaleZ:"scaleZ",rotationX:"rotationX",rotationY:"rotationY",rotationZ:"rotationZ",rotationDeg:"rotationDeg"}}}]);
//# sourceMappingURL=5972.9e4aab9d.chunk.js.map